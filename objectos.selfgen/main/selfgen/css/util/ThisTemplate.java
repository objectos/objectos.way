/*
 * Copyright (C) 2015-2023 Objectos Software LTDA.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package selfgen.css.util;

import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardOpenOption;
import objectos.code.ClassName;
import objectos.code.Code;
import objectos.code.Code.ImportList;
import objectos.lang.Check;

abstract class ThisTemplate {

	static final String GENERATED_MSG = "// Generated by selfgen.css.CssUtilSpec. Do not edit!";

	static final String HTML_STYLE = "objectos.html.style";

	static final ClassName CLASS_SELECTOR = ClassName.of(HTML_STYLE, "ClassSelector");

	static final ClassName OVERRIDE = ClassName.of(Override.class);

	static final ClassName STYLE_CLASS
			= ClassName.of("objectos.html.tmpl", "Api", "ExternalAttribute", "StyleClass");

	static final ClassName CLASS_SEQ_ID = ClassName.of("objectox.html.style", "ClassSelectorSeqId");

	final CssUtilSelfGen spec;

	final Code code;

	ClassName className;

	ImportList importList;

	String packageName;

	String simpleName;

	public ThisTemplate(CssUtilSelfGen spec) {
		this.spec = spec;

		code = spec.code;
	}

	@Override
	public final String toString() {
		return contents();
	}

	public void writeTo(Path directory) throws IOException {
		String contents;
		contents = contents();

		Path file;
		file = className.toPath(directory);

		Path parent;
		parent = file.getParent();

		Files.createDirectories(parent);

		Files.writeString(
				file, contents, StandardCharsets.UTF_8,
				StandardOpenOption.CREATE, StandardOpenOption.TRUNCATE_EXISTING);
	}

	final void className(ClassName className) {
		this.className = Check.notNull(className, "className == null");

		packageName = this.className.packageName();

		simpleName = this.className.simpleName();

		importList = code.importList(packageName);
	}

	abstract String contents();

}