/*
 * Copyright (C) 2015-2024 Objectos Software LTDA.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package objectos.html;

/**
 * Provides methods for rendering HTML elements.
 */
// Generated by objectos.selfgen.HtmlSpec. Do not edit!
public sealed abstract class BaseElements extends BaseAttributes permits Html {
  BaseElements() {}

  /**
   * Generates the {@code a} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element a(Api.AnchorValue... contents) {
    element(StandardElementName.A, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code a} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element a(String text) {
    element(StandardElementName.A, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code abbr} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element abbr(Api.AbbreviationValue... contents) {
    element(StandardElementName.ABBR, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code abbr} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element abbr(String text) {
    element(StandardElementName.ABBR, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code article} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element article(Api.ArticleValue... contents) {
    element(StandardElementName.ARTICLE, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code article} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element article(String text) {
    element(StandardElementName.ARTICLE, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code b} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element b(Api.BringAttentionToValue... contents) {
    element(StandardElementName.B, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code b} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element b(String text) {
    element(StandardElementName.B, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code blockquote} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element blockquote(Api.BlockquoteValue... contents) {
    element(StandardElementName.BLOCKQUOTE, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code blockquote} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element blockquote(String text) {
    element(StandardElementName.BLOCKQUOTE, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code body} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element body(Api.BodyValue... contents) {
    element(StandardElementName.BODY, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code body} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element body(String text) {
    element(StandardElementName.BODY, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code br} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element br(Api.LineBreakValue... contents) {
    element(StandardElementName.BR, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code button} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element button(Api.ButtonValue... contents) {
    element(StandardElementName.BUTTON, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code button} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element button(String text) {
    element(StandardElementName.BUTTON, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code clipPath} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element clipPath(Api.ClipPathValue... contents) {
    element(StandardElementName.CLIPPATH, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code code} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element code(Api.CodeValue... contents) {
    element(StandardElementName.CODE, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code code} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element code(String text) {
    element(StandardElementName.CODE, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code dd} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element dd(Api.DefinitionDescriptionValue... contents) {
    element(StandardElementName.DD, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code dd} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element dd(String text) {
    element(StandardElementName.DD, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code defs} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element defs(Api.DefsValue... contents) {
    element(StandardElementName.DEFS, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code defs} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element defs(String text) {
    element(StandardElementName.DEFS, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code details} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element details(Api.DetailsValue... contents) {
    element(StandardElementName.DETAILS, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code details} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element details(String text) {
    element(StandardElementName.DETAILS, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code div} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element div(Api.DivValue... contents) {
    element(StandardElementName.DIV, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code div} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element div(String text) {
    element(StandardElementName.DIV, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code dl} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element dl(Api.DefinitionListValue... contents) {
    element(StandardElementName.DL, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code dl} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element dl(String text) {
    element(StandardElementName.DL, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code dt} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element dt(Api.DefinitionTermValue... contents) {
    element(StandardElementName.DT, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code dt} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element dt(String text) {
    element(StandardElementName.DT, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code em} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element em(Api.EmphasisValue... contents) {
    element(StandardElementName.EM, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code em} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element em(String text) {
    element(StandardElementName.EM, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code fieldset} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element fieldset(Api.FieldsetValue... contents) {
    element(StandardElementName.FIELDSET, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code fieldset} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element fieldset(String text) {
    element(StandardElementName.FIELDSET, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code figure} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element figure(Api.FigureValue... contents) {
    element(StandardElementName.FIGURE, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code figure} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element figure(String text) {
    element(StandardElementName.FIGURE, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code footer} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element footer(Api.FooterValue... contents) {
    element(StandardElementName.FOOTER, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code footer} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element footer(String text) {
    element(StandardElementName.FOOTER, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code form} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element form(Api.FormValue... contents) {
    element(StandardElementName.FORM, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code form} attribute or element with the specified text.
   *
   * @param text
   *        the text value of this attribute or element
   *
   * @return an instruction representing this attribute or element.
   */
  public final Api.Element form(String text) {
    ambiguous(Ambiguous.FORM, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code g} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element g(Api.GValue... contents) {
    element(StandardElementName.G, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code g} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element g(String text) {
    element(StandardElementName.G, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code h1} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element h1(Api.Heading1Value... contents) {
    element(StandardElementName.H1, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code h1} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element h1(String text) {
    element(StandardElementName.H1, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code h2} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element h2(Api.Heading2Value... contents) {
    element(StandardElementName.H2, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code h2} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element h2(String text) {
    element(StandardElementName.H2, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code h3} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element h3(Api.Heading3Value... contents) {
    element(StandardElementName.H3, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code h3} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element h3(String text) {
    element(StandardElementName.H3, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code h4} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element h4(Api.Heading4Value... contents) {
    element(StandardElementName.H4, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code h4} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element h4(String text) {
    element(StandardElementName.H4, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code h5} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element h5(Api.Heading5Value... contents) {
    element(StandardElementName.H5, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code h5} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element h5(String text) {
    element(StandardElementName.H5, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code h6} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element h6(Api.Heading6Value... contents) {
    element(StandardElementName.H6, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code h6} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element h6(String text) {
    element(StandardElementName.H6, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code head} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element head(Api.HeadValue... contents) {
    element(StandardElementName.HEAD, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code head} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element head(String text) {
    element(StandardElementName.HEAD, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code header} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element header(Api.HeaderValue... contents) {
    element(StandardElementName.HEADER, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code header} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element header(String text) {
    element(StandardElementName.HEADER, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code hgroup} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element hgroup(Api.HeadingGroupValue... contents) {
    element(StandardElementName.HGROUP, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code hgroup} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element hgroup(String text) {
    element(StandardElementName.HGROUP, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code hr} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element hr(Api.HorizontalRuleValue... contents) {
    element(StandardElementName.HR, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code html} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element html(Api.HtmlValue... contents) {
    element(StandardElementName.HTML, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code html} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element html(String text) {
    element(StandardElementName.HTML, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code img} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element img(Api.ImageValue... contents) {
    element(StandardElementName.IMG, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code input} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element input(Api.InputValue... contents) {
    element(StandardElementName.INPUT, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code kbd} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element kbd(Api.KeyboardInputValue... contents) {
    element(StandardElementName.KBD, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code kbd} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element kbd(String text) {
    element(StandardElementName.KBD, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code label} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element label(Api.LabelValue... contents) {
    element(StandardElementName.LABEL, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code label} attribute or element with the specified text.
   *
   * @param text
   *        the text value of this attribute or element
   *
   * @return an instruction representing this attribute or element.
   */
  public final Api.Element label(String text) {
    ambiguous(Ambiguous.LABEL, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code legend} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element legend(Api.LegendValue... contents) {
    element(StandardElementName.LEGEND, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code legend} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element legend(String text) {
    element(StandardElementName.LEGEND, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code li} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element li(Api.ListItemValue... contents) {
    element(StandardElementName.LI, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code li} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element li(String text) {
    element(StandardElementName.LI, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code link} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element link(Api.LinkValue... contents) {
    element(StandardElementName.LINK, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code main} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element main(Api.MainValue... contents) {
    element(StandardElementName.MAIN, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code main} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element main(String text) {
    element(StandardElementName.MAIN, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code menu} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element menu(Api.MenuValue... contents) {
    element(StandardElementName.MENU, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code menu} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element menu(String text) {
    element(StandardElementName.MENU, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code meta} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element meta(Api.MetaValue... contents) {
    element(StandardElementName.META, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code nav} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element nav(Api.NavValue... contents) {
    element(StandardElementName.NAV, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code nav} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element nav(String text) {
    element(StandardElementName.NAV, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code ol} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element ol(Api.OrderedListValue... contents) {
    element(StandardElementName.OL, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code ol} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element ol(String text) {
    element(StandardElementName.OL, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code optgroup} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element optgroup(Api.OptionGroupValue... contents) {
    element(StandardElementName.OPTGROUP, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code optgroup} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element optgroup(String text) {
    element(StandardElementName.OPTGROUP, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code option} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element option(Api.OptionValue... contents) {
    element(StandardElementName.OPTION, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code option} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element option(String text) {
    element(StandardElementName.OPTION, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code p} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element p(Api.ParagraphValue... contents) {
    element(StandardElementName.P, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code p} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element p(String text) {
    element(StandardElementName.P, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code path} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element path(Api.PathValue... contents) {
    element(StandardElementName.PATH, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code path} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element path(String text) {
    element(StandardElementName.PATH, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code pre} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element pre(Api.PreValue... contents) {
    element(StandardElementName.PRE, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code pre} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element pre(String text) {
    element(StandardElementName.PRE, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code progress} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element progress(Api.ProgressValue... contents) {
    element(StandardElementName.PROGRESS, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code progress} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element progress(String text) {
    element(StandardElementName.PROGRESS, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code samp} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element samp(Api.SampleOutputValue... contents) {
    element(StandardElementName.SAMP, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code samp} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element samp(String text) {
    element(StandardElementName.SAMP, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code script} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element script(Api.ScriptValue... contents) {
    element(StandardElementName.SCRIPT, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code script} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element script(String text) {
    element(StandardElementName.SCRIPT, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code section} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element section(Api.SectionValue... contents) {
    element(StandardElementName.SECTION, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code section} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element section(String text) {
    element(StandardElementName.SECTION, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code select} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element select(Api.SelectValue... contents) {
    element(StandardElementName.SELECT, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code select} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element select(String text) {
    element(StandardElementName.SELECT, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code small} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element small(Api.SmallValue... contents) {
    element(StandardElementName.SMALL, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code small} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element small(String text) {
    element(StandardElementName.SMALL, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code span} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element span(Api.SpanValue... contents) {
    element(StandardElementName.SPAN, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code span} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element span(String text) {
    element(StandardElementName.SPAN, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code strong} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element strong(Api.StrongValue... contents) {
    element(StandardElementName.STRONG, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code strong} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element strong(String text) {
    element(StandardElementName.STRONG, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code style} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element style(Api.StyleValue... contents) {
    element(StandardElementName.STYLE, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code style} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element style(String text) {
    element(StandardElementName.STYLE, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code sub} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element sub(Api.SubscriptValue... contents) {
    element(StandardElementName.SUB, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code sub} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element sub(String text) {
    element(StandardElementName.SUB, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code summary} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element summary(Api.SummaryValue... contents) {
    element(StandardElementName.SUMMARY, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code summary} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element summary(String text) {
    element(StandardElementName.SUMMARY, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code sup} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element sup(Api.SuperscriptValue... contents) {
    element(StandardElementName.SUP, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code sup} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element sup(String text) {
    element(StandardElementName.SUP, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code svg} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element svg(Api.SvgValue... contents) {
    element(StandardElementName.SVG, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code svg} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element svg(String text) {
    element(StandardElementName.SVG, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code table} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element table(Api.TableValue... contents) {
    element(StandardElementName.TABLE, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code table} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element table(String text) {
    element(StandardElementName.TABLE, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code tbody} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element tbody(Api.TableBodyValue... contents) {
    element(StandardElementName.TBODY, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code tbody} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element tbody(String text) {
    element(StandardElementName.TBODY, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code td} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element td(Api.TableDataValue... contents) {
    element(StandardElementName.TD, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code td} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element td(String text) {
    element(StandardElementName.TD, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code template} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element template(Api.TemplateValue... contents) {
    element(StandardElementName.TEMPLATE, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code template} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element template(String text) {
    element(StandardElementName.TEMPLATE, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code textarea} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element textarea(Api.TextAreaValue... contents) {
    element(StandardElementName.TEXTAREA, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code textarea} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element textarea(String text) {
    element(StandardElementName.TEXTAREA, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code th} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element th(Api.TableHeaderValue... contents) {
    element(StandardElementName.TH, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code th} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element th(String text) {
    element(StandardElementName.TH, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code thead} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element thead(Api.TableHeadValue... contents) {
    element(StandardElementName.THEAD, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code thead} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element thead(String text) {
    element(StandardElementName.THEAD, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code title} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element title(Api.TitleValue... contents) {
    element(StandardElementName.TITLE, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code title} attribute or element with the specified text.
   *
   * @param text
   *        the text value of this attribute or element
   *
   * @return an instruction representing this attribute or element.
   */
  public final Api.Element title(String text) {
    ambiguous(Ambiguous.TITLE, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code tr} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element tr(Api.TableRowValue... contents) {
    element(StandardElementName.TR, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code tr} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element tr(String text) {
    element(StandardElementName.TR, text);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code ul} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element ul(Api.UnorderedListValue... contents) {
    element(StandardElementName.UL, contents);
    return Api.ELEMENT;
  }

  /**
   * Generates the {@code ul} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  public final Api.Element ul(String text) {
    element(StandardElementName.UL, text);
    return Api.ELEMENT;
  }

}
