/*
 * Copyright (C) 2015-2024 Objectos Software LTDA.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package objectos.html;

import objectos.html.BaseTypes.AbbreviationInstruction;
import objectos.html.BaseTypes.AnchorInstruction;
import objectos.html.BaseTypes.ArticleInstruction;
import objectos.html.BaseTypes.BlockquoteInstruction;
import objectos.html.BaseTypes.BodyInstruction;
import objectos.html.BaseTypes.BringAttentionToInstruction;
import objectos.html.BaseTypes.ButtonInstruction;
import objectos.html.BaseTypes.ClipPathInstruction;
import objectos.html.BaseTypes.CodeInstruction;
import objectos.html.BaseTypes.DefinitionDescriptionInstruction;
import objectos.html.BaseTypes.DefinitionListInstruction;
import objectos.html.BaseTypes.DefinitionTermInstruction;
import objectos.html.BaseTypes.DefsInstruction;
import objectos.html.BaseTypes.DetailsInstruction;
import objectos.html.BaseTypes.DivInstruction;
import objectos.html.BaseTypes.ElementInstruction;
import objectos.html.BaseTypes.EmphasisInstruction;
import objectos.html.BaseTypes.FieldsetInstruction;
import objectos.html.BaseTypes.FigureInstruction;
import objectos.html.BaseTypes.FooterInstruction;
import objectos.html.BaseTypes.FormInstruction;
import objectos.html.BaseTypes.GInstruction;
import objectos.html.BaseTypes.HeadInstruction;
import objectos.html.BaseTypes.HeaderInstruction;
import objectos.html.BaseTypes.Heading1Instruction;
import objectos.html.BaseTypes.Heading2Instruction;
import objectos.html.BaseTypes.Heading3Instruction;
import objectos.html.BaseTypes.Heading4Instruction;
import objectos.html.BaseTypes.Heading5Instruction;
import objectos.html.BaseTypes.Heading6Instruction;
import objectos.html.BaseTypes.HeadingGroupInstruction;
import objectos.html.BaseTypes.HorizontalRuleInstruction;
import objectos.html.BaseTypes.HtmlInstruction;
import objectos.html.BaseTypes.ImageInstruction;
import objectos.html.BaseTypes.InputInstruction;
import objectos.html.BaseTypes.KeyboardInputInstruction;
import objectos.html.BaseTypes.LabelInstruction;
import objectos.html.BaseTypes.LegendInstruction;
import objectos.html.BaseTypes.LineBreakInstruction;
import objectos.html.BaseTypes.LinkInstruction;
import objectos.html.BaseTypes.ListItemInstruction;
import objectos.html.BaseTypes.MainInstruction;
import objectos.html.BaseTypes.MenuInstruction;
import objectos.html.BaseTypes.MetaInstruction;
import objectos.html.BaseTypes.NavInstruction;
import objectos.html.BaseTypes.OptionGroupInstruction;
import objectos.html.BaseTypes.OptionInstruction;
import objectos.html.BaseTypes.OrderedListInstruction;
import objectos.html.BaseTypes.ParagraphInstruction;
import objectos.html.BaseTypes.PathInstruction;
import objectos.html.BaseTypes.PreInstruction;
import objectos.html.BaseTypes.ProgressInstruction;
import objectos.html.BaseTypes.SampleOutputInstruction;
import objectos.html.BaseTypes.ScriptInstruction;
import objectos.html.BaseTypes.SectionInstruction;
import objectos.html.BaseTypes.SelectInstruction;
import objectos.html.BaseTypes.SmallInstruction;
import objectos.html.BaseTypes.SpanInstruction;
import objectos.html.BaseTypes.StrongInstruction;
import objectos.html.BaseTypes.StyleInstruction;
import objectos.html.BaseTypes.SubscriptInstruction;
import objectos.html.BaseTypes.SummaryInstruction;
import objectos.html.BaseTypes.SuperscriptInstruction;
import objectos.html.BaseTypes.SvgInstruction;
import objectos.html.BaseTypes.TableBodyInstruction;
import objectos.html.BaseTypes.TableDataInstruction;
import objectos.html.BaseTypes.TableHeadInstruction;
import objectos.html.BaseTypes.TableHeaderInstruction;
import objectos.html.BaseTypes.TableInstruction;
import objectos.html.BaseTypes.TableRowInstruction;
import objectos.html.BaseTypes.TemplateInstruction;
import objectos.html.BaseTypes.TextAreaInstruction;
import objectos.html.BaseTypes.TitleInstruction;
import objectos.html.BaseTypes.UnorderedListInstruction;

/**
 * Provides methods for rendering HTML elements in templates.
 */
// Generated by objectos.selfgen.HtmlSpec. Do not edit!
public sealed abstract class TemplateElements extends TemplateAttributes permits TemplateUtilities {
  TemplateElements() {}

  /**
   * Generates the {@code a} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction a(AnchorInstruction... contents) {
    return html.a(contents);
  }

  /**
   * Generates the {@code a} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction a(String text) {
    return html.a(text);
  }

  /**
   * Generates the {@code abbr} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction abbr(AbbreviationInstruction... contents) {
    return html.abbr(contents);
  }

  /**
   * Generates the {@code abbr} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction abbr(String text) {
    return html.abbr(text);
  }

  /**
   * Generates the {@code article} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction article(ArticleInstruction... contents) {
    return html.article(contents);
  }

  /**
   * Generates the {@code article} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction article(String text) {
    return html.article(text);
  }

  /**
   * Generates the {@code b} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction b(BringAttentionToInstruction... contents) {
    return html.b(contents);
  }

  /**
   * Generates the {@code b} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction b(String text) {
    return html.b(text);
  }

  /**
   * Generates the {@code blockquote} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction blockquote(BlockquoteInstruction... contents) {
    return html.blockquote(contents);
  }

  /**
   * Generates the {@code blockquote} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction blockquote(String text) {
    return html.blockquote(text);
  }

  /**
   * Generates the {@code body} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction body(BodyInstruction... contents) {
    return html.body(contents);
  }

  /**
   * Generates the {@code body} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction body(String text) {
    return html.body(text);
  }

  /**
   * Generates the {@code br} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction br(LineBreakInstruction... contents) {
    return html.br(contents);
  }

  /**
   * Generates the {@code button} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction button(ButtonInstruction... contents) {
    return html.button(contents);
  }

  /**
   * Generates the {@code button} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction button(String text) {
    return html.button(text);
  }

  /**
   * Generates the {@code clipPath} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction clipPath(ClipPathInstruction... contents) {
    return html.clipPath(contents);
  }

  /**
   * Generates the {@code code} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction code(CodeInstruction... contents) {
    return html.code(contents);
  }

  /**
   * Generates the {@code code} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction code(String text) {
    return html.code(text);
  }

  /**
   * Generates the {@code dd} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction dd(DefinitionDescriptionInstruction... contents) {
    return html.dd(contents);
  }

  /**
   * Generates the {@code dd} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction dd(String text) {
    return html.dd(text);
  }

  /**
   * Generates the {@code defs} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction defs(DefsInstruction... contents) {
    return html.defs(contents);
  }

  /**
   * Generates the {@code defs} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction defs(String text) {
    return html.defs(text);
  }

  /**
   * Generates the {@code details} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction details(DetailsInstruction... contents) {
    return html.details(contents);
  }

  /**
   * Generates the {@code details} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction details(String text) {
    return html.details(text);
  }

  /**
   * Generates the {@code div} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction div(DivInstruction... contents) {
    return html.div(contents);
  }

  /**
   * Generates the {@code div} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction div(String text) {
    return html.div(text);
  }

  /**
   * Generates the {@code dl} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction dl(DefinitionListInstruction... contents) {
    return html.dl(contents);
  }

  /**
   * Generates the {@code dl} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction dl(String text) {
    return html.dl(text);
  }

  /**
   * Generates the {@code dt} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction dt(DefinitionTermInstruction... contents) {
    return html.dt(contents);
  }

  /**
   * Generates the {@code dt} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction dt(String text) {
    return html.dt(text);
  }

  /**
   * Generates the {@code em} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction em(EmphasisInstruction... contents) {
    return html.em(contents);
  }

  /**
   * Generates the {@code em} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction em(String text) {
    return html.em(text);
  }

  /**
   * Generates the {@code fieldset} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction fieldset(FieldsetInstruction... contents) {
    return html.fieldset(contents);
  }

  /**
   * Generates the {@code fieldset} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction fieldset(String text) {
    return html.fieldset(text);
  }

  /**
   * Generates the {@code figure} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction figure(FigureInstruction... contents) {
    return html.figure(contents);
  }

  /**
   * Generates the {@code figure} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction figure(String text) {
    return html.figure(text);
  }

  /**
   * Generates the {@code footer} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction footer(FooterInstruction... contents) {
    return html.footer(contents);
  }

  /**
   * Generates the {@code footer} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction footer(String text) {
    return html.footer(text);
  }

  /**
   * Generates the {@code form} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction form(FormInstruction... contents) {
    return html.form(contents);
  }

  /**
   * Generates the {@code form} attribute or element with the specified text.
   *
   * @param text
   *        the text value of this attribute or element
   *
   * @return an instruction representing this attribute or element.
   */
  protected final ElementInstruction form(String text) {
    return html.form(text);
  }

  /**
   * Generates the {@code g} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction g(GInstruction... contents) {
    return html.g(contents);
  }

  /**
   * Generates the {@code g} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction g(String text) {
    return html.g(text);
  }

  /**
   * Generates the {@code h1} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction h1(Heading1Instruction... contents) {
    return html.h1(contents);
  }

  /**
   * Generates the {@code h1} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction h1(String text) {
    return html.h1(text);
  }

  /**
   * Generates the {@code h2} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction h2(Heading2Instruction... contents) {
    return html.h2(contents);
  }

  /**
   * Generates the {@code h2} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction h2(String text) {
    return html.h2(text);
  }

  /**
   * Generates the {@code h3} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction h3(Heading3Instruction... contents) {
    return html.h3(contents);
  }

  /**
   * Generates the {@code h3} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction h3(String text) {
    return html.h3(text);
  }

  /**
   * Generates the {@code h4} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction h4(Heading4Instruction... contents) {
    return html.h4(contents);
  }

  /**
   * Generates the {@code h4} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction h4(String text) {
    return html.h4(text);
  }

  /**
   * Generates the {@code h5} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction h5(Heading5Instruction... contents) {
    return html.h5(contents);
  }

  /**
   * Generates the {@code h5} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction h5(String text) {
    return html.h5(text);
  }

  /**
   * Generates the {@code h6} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction h6(Heading6Instruction... contents) {
    return html.h6(contents);
  }

  /**
   * Generates the {@code h6} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction h6(String text) {
    return html.h6(text);
  }

  /**
   * Generates the {@code head} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction head(HeadInstruction... contents) {
    return html.head(contents);
  }

  /**
   * Generates the {@code head} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction head(String text) {
    return html.head(text);
  }

  /**
   * Generates the {@code header} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction header(HeaderInstruction... contents) {
    return html.header(contents);
  }

  /**
   * Generates the {@code header} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction header(String text) {
    return html.header(text);
  }

  /**
   * Generates the {@code hgroup} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction hgroup(HeadingGroupInstruction... contents) {
    return html.hgroup(contents);
  }

  /**
   * Generates the {@code hgroup} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction hgroup(String text) {
    return html.hgroup(text);
  }

  /**
   * Generates the {@code hr} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction hr(HorizontalRuleInstruction... contents) {
    return html.hr(contents);
  }

  /**
   * Generates the {@code html} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction html(HtmlInstruction... contents) {
    return html.html(contents);
  }

  /**
   * Generates the {@code html} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction html(String text) {
    return html.html(text);
  }

  /**
   * Generates the {@code img} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction img(ImageInstruction... contents) {
    return html.img(contents);
  }

  /**
   * Generates the {@code input} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction input(InputInstruction... contents) {
    return html.input(contents);
  }

  /**
   * Generates the {@code kbd} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction kbd(KeyboardInputInstruction... contents) {
    return html.kbd(contents);
  }

  /**
   * Generates the {@code kbd} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction kbd(String text) {
    return html.kbd(text);
  }

  /**
   * Generates the {@code label} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction label(LabelInstruction... contents) {
    return html.label(contents);
  }

  /**
   * Generates the {@code label} attribute or element with the specified text.
   *
   * @param text
   *        the text value of this attribute or element
   *
   * @return an instruction representing this attribute or element.
   */
  protected final ElementInstruction label(String text) {
    return html.label(text);
  }

  /**
   * Generates the {@code legend} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction legend(LegendInstruction... contents) {
    return html.legend(contents);
  }

  /**
   * Generates the {@code legend} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction legend(String text) {
    return html.legend(text);
  }

  /**
   * Generates the {@code li} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction li(ListItemInstruction... contents) {
    return html.li(contents);
  }

  /**
   * Generates the {@code li} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction li(String text) {
    return html.li(text);
  }

  /**
   * Generates the {@code link} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction link(LinkInstruction... contents) {
    return html.link(contents);
  }

  /**
   * Generates the {@code main} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction main(MainInstruction... contents) {
    return html.main(contents);
  }

  /**
   * Generates the {@code main} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction main(String text) {
    return html.main(text);
  }

  /**
   * Generates the {@code menu} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction menu(MenuInstruction... contents) {
    return html.menu(contents);
  }

  /**
   * Generates the {@code menu} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction menu(String text) {
    return html.menu(text);
  }

  /**
   * Generates the {@code meta} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction meta(MetaInstruction... contents) {
    return html.meta(contents);
  }

  /**
   * Generates the {@code nav} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction nav(NavInstruction... contents) {
    return html.nav(contents);
  }

  /**
   * Generates the {@code nav} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction nav(String text) {
    return html.nav(text);
  }

  /**
   * Generates the {@code ol} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction ol(OrderedListInstruction... contents) {
    return html.ol(contents);
  }

  /**
   * Generates the {@code ol} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction ol(String text) {
    return html.ol(text);
  }

  /**
   * Generates the {@code optgroup} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction optgroup(OptionGroupInstruction... contents) {
    return html.optgroup(contents);
  }

  /**
   * Generates the {@code optgroup} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction optgroup(String text) {
    return html.optgroup(text);
  }

  /**
   * Generates the {@code option} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction option(OptionInstruction... contents) {
    return html.option(contents);
  }

  /**
   * Generates the {@code option} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction option(String text) {
    return html.option(text);
  }

  /**
   * Generates the {@code p} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction p(ParagraphInstruction... contents) {
    return html.p(contents);
  }

  /**
   * Generates the {@code p} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction p(String text) {
    return html.p(text);
  }

  /**
   * Generates the {@code path} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction path(PathInstruction... contents) {
    return html.path(contents);
  }

  /**
   * Generates the {@code path} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction path(String text) {
    return html.path(text);
  }

  /**
   * Generates the {@code pre} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction pre(PreInstruction... contents) {
    return html.pre(contents);
  }

  /**
   * Generates the {@code pre} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction pre(String text) {
    return html.pre(text);
  }

  /**
   * Generates the {@code progress} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction progress(ProgressInstruction... contents) {
    return html.progress(contents);
  }

  /**
   * Generates the {@code progress} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction progress(String text) {
    return html.progress(text);
  }

  /**
   * Generates the {@code samp} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction samp(SampleOutputInstruction... contents) {
    return html.samp(contents);
  }

  /**
   * Generates the {@code samp} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction samp(String text) {
    return html.samp(text);
  }

  /**
   * Generates the {@code script} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction script(ScriptInstruction... contents) {
    return html.script(contents);
  }

  /**
   * Generates the {@code script} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction script(String text) {
    return html.script(text);
  }

  /**
   * Generates the {@code section} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction section(SectionInstruction... contents) {
    return html.section(contents);
  }

  /**
   * Generates the {@code section} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction section(String text) {
    return html.section(text);
  }

  /**
   * Generates the {@code select} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction select(SelectInstruction... contents) {
    return html.select(contents);
  }

  /**
   * Generates the {@code select} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction select(String text) {
    return html.select(text);
  }

  /**
   * Generates the {@code small} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction small(SmallInstruction... contents) {
    return html.small(contents);
  }

  /**
   * Generates the {@code small} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction small(String text) {
    return html.small(text);
  }

  /**
   * Generates the {@code span} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction span(SpanInstruction... contents) {
    return html.span(contents);
  }

  /**
   * Generates the {@code span} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction span(String text) {
    return html.span(text);
  }

  /**
   * Generates the {@code strong} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction strong(StrongInstruction... contents) {
    return html.strong(contents);
  }

  /**
   * Generates the {@code strong} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction strong(String text) {
    return html.strong(text);
  }

  /**
   * Generates the {@code style} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction style(StyleInstruction... contents) {
    return html.style(contents);
  }

  /**
   * Generates the {@code style} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction style(String text) {
    return html.style(text);
  }

  /**
   * Generates the {@code sub} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction sub(SubscriptInstruction... contents) {
    return html.sub(contents);
  }

  /**
   * Generates the {@code sub} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction sub(String text) {
    return html.sub(text);
  }

  /**
   * Generates the {@code summary} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction summary(SummaryInstruction... contents) {
    return html.summary(contents);
  }

  /**
   * Generates the {@code summary} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction summary(String text) {
    return html.summary(text);
  }

  /**
   * Generates the {@code sup} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction sup(SuperscriptInstruction... contents) {
    return html.sup(contents);
  }

  /**
   * Generates the {@code sup} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction sup(String text) {
    return html.sup(text);
  }

  /**
   * Generates the {@code svg} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction svg(SvgInstruction... contents) {
    return html.svg(contents);
  }

  /**
   * Generates the {@code svg} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction svg(String text) {
    return html.svg(text);
  }

  /**
   * Generates the {@code table} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction table(TableInstruction... contents) {
    return html.table(contents);
  }

  /**
   * Generates the {@code table} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction table(String text) {
    return html.table(text);
  }

  /**
   * Generates the {@code tbody} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction tbody(TableBodyInstruction... contents) {
    return html.tbody(contents);
  }

  /**
   * Generates the {@code tbody} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction tbody(String text) {
    return html.tbody(text);
  }

  /**
   * Generates the {@code td} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction td(TableDataInstruction... contents) {
    return html.td(contents);
  }

  /**
   * Generates the {@code td} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction td(String text) {
    return html.td(text);
  }

  /**
   * Generates the {@code template} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction template(TemplateInstruction... contents) {
    return html.template(contents);
  }

  /**
   * Generates the {@code template} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction template(String text) {
    return html.template(text);
  }

  /**
   * Generates the {@code textarea} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction textarea(TextAreaInstruction... contents) {
    return html.textarea(contents);
  }

  /**
   * Generates the {@code textarea} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction textarea(String text) {
    return html.textarea(text);
  }

  /**
   * Generates the {@code th} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction th(TableHeaderInstruction... contents) {
    return html.th(contents);
  }

  /**
   * Generates the {@code th} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction th(String text) {
    return html.th(text);
  }

  /**
   * Generates the {@code thead} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction thead(TableHeadInstruction... contents) {
    return html.thead(contents);
  }

  /**
   * Generates the {@code thead} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction thead(String text) {
    return html.thead(text);
  }

  /**
   * Generates the {@code title} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction title(TitleInstruction... contents) {
    return html.title(contents);
  }

  /**
   * Generates the {@code title} attribute or element with the specified text.
   *
   * @param text
   *        the text value of this attribute or element
   *
   * @return an instruction representing this attribute or element.
   */
  protected final ElementInstruction title(String text) {
    return html.title(text);
  }

  /**
   * Generates the {@code tr} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction tr(TableRowInstruction... contents) {
    return html.tr(contents);
  }

  /**
   * Generates the {@code tr} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction tr(String text) {
    return html.tr(text);
  }

  /**
   * Generates the {@code ul} element with the specified content.
   *
   * @param contents
   *        the attributes and children of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction ul(UnorderedListInstruction... contents) {
    return html.ul(contents);
  }

  /**
   * Generates the {@code ul} element with the specified text.
   *
   * @param text
   *        the text value of this element
   *
   * @return an instruction representing this element.
   */
  protected final ElementInstruction ul(String text) {
    return html.ul(text);
  }

  /**
   * Generates the {@code <!DOCTYPE html>} doctype.
   */
  protected final void doctype() {
    html.doctype();
  }
}
