/*
 * Copyright (C) 2023-2024 Objectos Software LTDA.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package objectos.way;

import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import org.h2.jdbcx.JdbcConnectionPool;

final class TestingH2 {

  public static final Sql.Database SOURCE;

  static {
    try {
      SOURCE = source();
    } catch (SQLException e) {
      throw new RuntimeException(e);
    }
  }

  private static final String SQL = """
  create table SIMPLE (
    ID integer generated by default as identity primary key,
    "VALUE" varchar(30)
  );

  insert into SIMPLE values (default, 'CDE');
  insert into SIMPLE values (default, 'BCD');
  insert into SIMPLE values (default, 'ABC');
  """;

  private TestingH2() {}

  private static Sql.Database source() throws SQLException {
    final JdbcConnectionPool ds;
    ds = create();

    return Sql.Database.create(config -> {
      config.dataSource(ds);

      config.noteSink(TestingNoteSink.INSTANCE);
    });
  }

  private static JdbcConnectionPool create() throws SQLException {
    JdbcConnectionPool ds;
    ds = JdbcConnectionPool.create("jdbc:h2:mem:", "sa", "sa");

    ds.setMaxConnections(4);

    try (Connection c = ds.getConnection()) {
      c.setTransactionIsolation(Connection.TRANSACTION_SERIALIZABLE);

      c.setAutoCommit(false);

      try (Statement s = c.createStatement()) {
        s.executeUpdate(SQL);
      }

      c.commit();
    }

    return ds;
  }

}
