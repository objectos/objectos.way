/*
 * Copyright (C) 2023-2025 Objectos Software LTDA.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import java.io.BufferedWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardOpenOption;

/**
 * Generates the ScriptLibrary.java class containing the source code of the
 * Objectos Way JS library.
 */
public final class ScriptLibraryGen {

  private ScriptLibraryGen() {}

  public static void main(String[] args) throws IOException {
    final Path sourceFile;
    sourceFile = Path.of("main-js", "way.js");

    final Path targetFile;
    targetFile = Path.of("main", "objectos", "way", "ScriptLibrary.java");

    try (
        final BufferedWriter w = Files.newBufferedWriter(
            targetFile, StandardCharsets.UTF_8,
            StandardOpenOption.CREATE, StandardOpenOption.TRUNCATE_EXISTING
        );
    ) {

      final String format;
      format = """
      /*
       * Copyright (C) 2023-2025 Objectos Software LTDA.
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       * http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */
      package objectos.way;

      import java.io.IOException;
      import java.nio.charset.Charset;
      import java.nio.charset.StandardCharsets;

      /*
       * Do not edit: this class was generated by ScriptLibraryGen.java.
       */
      enum ScriptLibrary implements Script.Library {

        INSTANCE;
        
        @Override
        public final String contentType() {
          return "text/javascript; charset=utf-8";
        }
      
        @Override
        public final Charset charset() {
          return StandardCharsets.UTF_8;
        }
        
        @Override
        public final void writeTo(Appendable out) throws IOException {
          out.append(toString());
        }

        @Override
        public final String toString() {
          return \"""
      %s
      \""";
        }

      }
      """;

      final String js;
      js = Files.readString(sourceFile, StandardCharsets.UTF_8);

      // we expect JS source code to NOT contain the '"""' literal...
      final String formatted;
      formatted = String.format(format, js);

      w.write(formatted);
    }
  }

}