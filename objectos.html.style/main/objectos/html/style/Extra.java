/*
 * Copyright (C) 2023 Objectos Software LTDA.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package objectos.html.style;

import objectos.html.tmpl.Api.ExternalAttribute.StyleClass;
import objectox.html.style.ClassSelectorSeqId;

// Generated by selfgen.css.CssUtilSpec. Do not edit!
public final class Extra {

  private Extra() {}

  /**
   * Utility classes for the {@code align-content} CSS property.
   */
  public enum AlignContent implements StyleClass {

    NORMAL("normal"),

    CENTER("center"),

    START("flex-start"),

    END("flex-end"),

    BETWEEN("space-between"),

    AROUND("space-around"),

    EVENLY("space-evenly"),

    BASELINE("baseline"),

    STRETCH("stretch");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private AlignContent(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { align-content: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code align-items} CSS property.
   */
  public enum AlignItems implements StyleClass {

    START("flex-start"),

    END("flex-end"),

    CENTER("center"),

    BASELINE("baseline"),

    STRETCH("stretch");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private AlignItems(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { align-items: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code align-self} CSS property.
   */
  public enum AlignSelf implements StyleClass {

    AUTO("auto"),

    START("flex-start"),

    END("flex-end"),

    CENTER("center"),

    STRETCH("stretch"),

    BASELINE("baseline");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private AlignSelf(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { align-self: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code background-color} CSS property.
   */
  public enum BackgroundColor implements StyleClass {

    INHERIT("inherit"),

    CURRENT("currentColor"),

    TRANSPARENT("transparent"),

    BLACK("rgb(0 0 0)"),

    WHITE("rgb(255 255 255)"),

    SLATE_050("rgb(248 250 252)"),

    SLATE_100("rgb(241 245 249)"),

    SLATE_200("rgb(226 232 240)"),

    SLATE_300("rgb(203 213 225)"),

    SLATE_400("rgb(148 163 184)"),

    SLATE_500("rgb(100 116 139)"),

    SLATE_600("rgb(71 85 105)"),

    SLATE_700("rgb(51 65 85)"),

    SLATE_800("rgb(30 41 59)"),

    SLATE_900("rgb(15 23 42)"),

    GRAY_050("rgb(249 250 251)"),

    GRAY_100("rgb(243 244 246)"),

    GRAY_200("rgb(229 231 235)"),

    GRAY_300("rgb(209 213 219)"),

    GRAY_400("rgb(156 163 175)"),

    GRAY_500("rgb(107 114 128)"),

    GRAY_600("rgb(75 85 99)"),

    GRAY_700("rgb(55 65 81)"),

    GRAY_800("rgb(31 41 55)"),

    GRAY_900("rgb(17 24 39)"),

    ZINC_050("rgb(250 250 250)"),

    ZINC_100("rgb(244 244 245)"),

    ZINC_200("rgb(228 228 231)"),

    ZINC_300("rgb(212 212 216)"),

    ZINC_400("rgb(161 161 170)"),

    ZINC_500("rgb(113 113 122)"),

    ZINC_600("rgb(82 82 91)"),

    ZINC_700("rgb(63 63 70)"),

    ZINC_800("rgb(39 39 42)"),

    ZINC_900("rgb(24 24 27)"),

    NEUTRAL_050("rgb(250 250 250)"),

    NEUTRAL_100("rgb(245 245 245)"),

    NEUTRAL_200("rgb(229 229 229)"),

    NEUTRAL_300("rgb(212 212 212)"),

    NEUTRAL_400("rgb(163 163 163)"),

    NEUTRAL_500("rgb(115 115 115)"),

    NEUTRAL_600("rgb(82 82 82)"),

    NEUTRAL_700("rgb(64 64 64)"),

    NEUTRAL_800("rgb(38 38 38)"),

    NEUTRAL_900("rgb(23 23 23)"),

    STONE_050("rgb(250 250 249)"),

    STONE_100("rgb(245 245 244)"),

    STONE_200("rgb(231 229 228)"),

    STONE_300("rgb(214 211 209)"),

    STONE_400("rgb(168 162 158)"),

    STONE_500("rgb(120 113 108)"),

    STONE_600("rgb(87 83 78)"),

    STONE_700("rgb(68 64 60)"),

    STONE_800("rgb(41 37 36)"),

    STONE_900("rgb(28 25 23)"),

    RED_050("rgb(254 242 242)"),

    RED_100("rgb(254 226 226)"),

    RED_200("rgb(254 202 202)"),

    RED_300("rgb(252 165 165)"),

    RED_400("rgb(248 113 113)"),

    RED_500("rgb(239 68 68)"),

    RED_600("rgb(220 38 38)"),

    RED_700("rgb(185 28 28)"),

    RED_800("rgb(153 27 27)"),

    RED_900("rgb(127 29 29)"),

    ORANGE_050("rgb(255 247 237)"),

    ORANGE_100("rgb(255 237 213)"),

    ORANGE_200("rgb(254 215 170)"),

    ORANGE_300("rgb(253 186 116)"),

    ORANGE_400("rgb(251 146 60)"),

    ORANGE_500("rgb(249 115 22)"),

    ORANGE_600("rgb(234 88 12)"),

    ORANGE_700("rgb(194 65 12)"),

    ORANGE_800("rgb(154 52 18)"),

    ORANGE_900("rgb(124 45 18)"),

    AMBER_050("rgb(255 251 235)"),

    AMBER_100("rgb(254 243 199)"),

    AMBER_200("rgb(253 230 138)"),

    AMBER_300("rgb(252 211 77)"),

    AMBER_400("rgb(251 191 36)"),

    AMBER_500("rgb(245 158 11)"),

    AMBER_600("rgb(217 119 6)"),

    AMBER_700("rgb(180 83 9)"),

    AMBER_800("rgb(146 64 14)"),

    AMBER_900("rgb(120 53 15)"),

    YELLOW_050("rgb(254 252 232)"),

    YELLOW_100("rgb(254 249 195)"),

    YELLOW_200("rgb(254 240 138)"),

    YELLOW_300("rgb(253 224 71)"),

    YELLOW_400("rgb(250 204 21)"),

    YELLOW_500("rgb(234 179 8)"),

    YELLOW_600("rgb(202 138 4)"),

    YELLOW_700("rgb(161 98 7)"),

    YELLOW_800("rgb(133 77 14)"),

    YELLOW_900("rgb(113 63 18)"),

    LIME_050("rgb(247 254 231)"),

    LIME_100("rgb(236 252 203)"),

    LIME_200("rgb(217 249 157)"),

    LIME_300("rgb(190 242 100)"),

    LIME_400("rgb(163 230 53)"),

    LIME_500("rgb(132 204 22)"),

    LIME_600("rgb(101 163 13)"),

    LIME_700("rgb(77 124 15)"),

    LIME_800("rgb(63 98 18)"),

    LIME_900("rgb(54 83 20)"),

    GREEN_050("rgb(240 253 244)"),

    GREEN_100("rgb(220 252 231)"),

    GREEN_200("rgb(187 247 208)"),

    GREEN_300("rgb(134 239 172)"),

    GREEN_400("rgb(74 222 128)"),

    GREEN_500("rgb(34 197 94)"),

    GREEN_600("rgb(22 163 74)"),

    GREEN_700("rgb(21 128 61)"),

    GREEN_800("rgb(22 101 52)"),

    GREEN_900("rgb(20 83 45)"),

    EMERALD_050("rgb(236 253 245)"),

    EMERALD_100("rgb(209 250 229)"),

    EMERALD_200("rgb(167 243 208)"),

    EMERALD_300("rgb(110 231 183)"),

    EMERALD_400("rgb(52 211 153)"),

    EMERALD_500("rgb(16 185 129)"),

    EMERALD_600("rgb(5 150 105)"),

    EMERALD_700("rgb(4 120 87)"),

    EMERALD_800("rgb(6 95 70)"),

    EMERALD_900("rgb(6 78 59)"),

    TEAL_050("rgb(240 253 250)"),

    TEAL_100("rgb(204 251 241)"),

    TEAL_200("rgb(153 246 228)"),

    TEAL_300("rgb(94 234 212)"),

    TEAL_400("rgb(45 212 191)"),

    TEAL_500("rgb(20 184 166)"),

    TEAL_600("rgb(13 148 136)"),

    TEAL_700("rgb(15 118 110)"),

    TEAL_800("rgb(17 94 89)"),

    TEAL_900("rgb(19 78 74)"),

    CYAN_050("rgb(236 254 255)"),

    CYAN_100("rgb(207 250 254)"),

    CYAN_200("rgb(165 243 252)"),

    CYAN_300("rgb(103 232 249)"),

    CYAN_400("rgb(34 211 238)"),

    CYAN_500("rgb(6 182 212)"),

    CYAN_600("rgb(8 145 178)"),

    CYAN_700("rgb(14 116 144)"),

    CYAN_800("rgb(21 94 117)"),

    CYAN_900("rgb(22 78 99)"),

    SKY_050("rgb(240 249 255)"),

    SKY_100("rgb(224 242 254)"),

    SKY_200("rgb(186 230 253)"),

    SKY_300("rgb(125 211 252)"),

    SKY_400("rgb(56 189 248)"),

    SKY_500("rgb(14 165 233)"),

    SKY_600("rgb(2 132 199)"),

    SKY_700("rgb(3 105 161)"),

    SKY_800("rgb(7 89 133)"),

    SKY_900("rgb(12 74 110)"),

    BLUE_050("rgb(239 246 255)"),

    BLUE_100("rgb(219 234 254)"),

    BLUE_200("rgb(191 219 254)"),

    BLUE_300("rgb(147 197 253)"),

    BLUE_400("rgb(96 165 250)"),

    BLUE_500("rgb(59 130 246)"),

    BLUE_600("rgb(37 99 235)"),

    BLUE_700("rgb(29 78 216)"),

    BLUE_800("rgb(30 64 175)"),

    BLUE_900("rgb(30 58 138)"),

    INDIGO_050("rgb(238 242 255)"),

    INDIGO_100("rgb(224 231 255)"),

    INDIGO_200("rgb(199 210 254)"),

    INDIGO_300("rgb(165 180 252)"),

    INDIGO_400("rgb(129 140 248)"),

    INDIGO_500("rgb(99 102 241)"),

    INDIGO_600("rgb(79 70 229)"),

    INDIGO_700("rgb(67 56 202)"),

    INDIGO_800("rgb(55 48 163)"),

    INDIGO_900("rgb(49 46 129)"),

    VIOLET_050("rgb(245 243 255)"),

    VIOLET_100("rgb(237 233 254)"),

    VIOLET_200("rgb(221 214 254)"),

    VIOLET_300("rgb(196 181 253)"),

    VIOLET_400("rgb(167 139 250)"),

    VIOLET_500("rgb(139 92 246)"),

    VIOLET_600("rgb(124 58 237)"),

    VIOLET_700("rgb(109 40 217)"),

    VIOLET_800("rgb(91 33 182)"),

    VIOLET_900("rgb(76 29 149)"),

    PURPLE_050("rgb(250 245 255)"),

    PURPLE_100("rgb(243 232 255)"),

    PURPLE_200("rgb(233 213 255)"),

    PURPLE_300("rgb(216 180 254)"),

    PURPLE_400("rgb(192 132 252)"),

    PURPLE_500("rgb(168 85 247)"),

    PURPLE_600("rgb(147 51 234)"),

    PURPLE_700("rgb(126 34 206)"),

    PURPLE_800("rgb(107 33 168)"),

    PURPLE_900("rgb(88 28 135)"),

    FUCHSIA_050("rgb(253 244 255)"),

    FUCHSIA_100("rgb(250 232 255)"),

    FUCHSIA_200("rgb(245 208 254)"),

    FUCHSIA_300("rgb(240 171 252)"),

    FUCHSIA_400("rgb(232 121 249)"),

    FUCHSIA_500("rgb(217 70 239)"),

    FUCHSIA_600("rgb(192 38 211)"),

    FUCHSIA_700("rgb(162 28 175)"),

    FUCHSIA_800("rgb(134 25 143)"),

    FUCHSIA_900("rgb(112 26 117)"),

    PINK_050("rgb(253 242 248)"),

    PINK_100("rgb(252 231 243)"),

    PINK_200("rgb(251 207 232)"),

    PINK_300("rgb(249 168 212)"),

    PINK_400("rgb(244 114 182)"),

    PINK_500("rgb(236 72 153)"),

    PINK_600("rgb(219 39 119)"),

    PINK_700("rgb(190 24 93)"),

    PINK_800("rgb(157 23 77)"),

    PINK_900("rgb(131 24 67)"),

    ROSE_050("rgb(255 241 242)"),

    ROSE_100("rgb(255 228 230)"),

    ROSE_200("rgb(254 205 211)"),

    ROSE_300("rgb(253 164 175)"),

    ROSE_400("rgb(251 113 133)"),

    ROSE_500("rgb(244 63 94)"),

    ROSE_600("rgb(225 29 72)"),

    ROSE_700("rgb(190 18 60)"),

    ROSE_800("rgb(159 18 57)"),

    ROSE_900("rgb(136 19 55)");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private BackgroundColor(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { background-color: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code border-color} CSS property.
   */
  public enum BorderColor implements StyleClass {

    INHERIT("inherit"),

    CURRENT("currentColor"),

    TRANSPARENT("transparent"),

    BLACK("rgb(0 0 0)"),

    WHITE("rgb(255 255 255)"),

    SLATE_050("rgb(248 250 252)"),

    SLATE_100("rgb(241 245 249)"),

    SLATE_200("rgb(226 232 240)"),

    SLATE_300("rgb(203 213 225)"),

    SLATE_400("rgb(148 163 184)"),

    SLATE_500("rgb(100 116 139)"),

    SLATE_600("rgb(71 85 105)"),

    SLATE_700("rgb(51 65 85)"),

    SLATE_800("rgb(30 41 59)"),

    SLATE_900("rgb(15 23 42)"),

    GRAY_050("rgb(249 250 251)"),

    GRAY_100("rgb(243 244 246)"),

    GRAY_200("rgb(229 231 235)"),

    GRAY_300("rgb(209 213 219)"),

    GRAY_400("rgb(156 163 175)"),

    GRAY_500("rgb(107 114 128)"),

    GRAY_600("rgb(75 85 99)"),

    GRAY_700("rgb(55 65 81)"),

    GRAY_800("rgb(31 41 55)"),

    GRAY_900("rgb(17 24 39)"),

    ZINC_050("rgb(250 250 250)"),

    ZINC_100("rgb(244 244 245)"),

    ZINC_200("rgb(228 228 231)"),

    ZINC_300("rgb(212 212 216)"),

    ZINC_400("rgb(161 161 170)"),

    ZINC_500("rgb(113 113 122)"),

    ZINC_600("rgb(82 82 91)"),

    ZINC_700("rgb(63 63 70)"),

    ZINC_800("rgb(39 39 42)"),

    ZINC_900("rgb(24 24 27)"),

    NEUTRAL_050("rgb(250 250 250)"),

    NEUTRAL_100("rgb(245 245 245)"),

    NEUTRAL_200("rgb(229 229 229)"),

    NEUTRAL_300("rgb(212 212 212)"),

    NEUTRAL_400("rgb(163 163 163)"),

    NEUTRAL_500("rgb(115 115 115)"),

    NEUTRAL_600("rgb(82 82 82)"),

    NEUTRAL_700("rgb(64 64 64)"),

    NEUTRAL_800("rgb(38 38 38)"),

    NEUTRAL_900("rgb(23 23 23)"),

    STONE_050("rgb(250 250 249)"),

    STONE_100("rgb(245 245 244)"),

    STONE_200("rgb(231 229 228)"),

    STONE_300("rgb(214 211 209)"),

    STONE_400("rgb(168 162 158)"),

    STONE_500("rgb(120 113 108)"),

    STONE_600("rgb(87 83 78)"),

    STONE_700("rgb(68 64 60)"),

    STONE_800("rgb(41 37 36)"),

    STONE_900("rgb(28 25 23)"),

    RED_050("rgb(254 242 242)"),

    RED_100("rgb(254 226 226)"),

    RED_200("rgb(254 202 202)"),

    RED_300("rgb(252 165 165)"),

    RED_400("rgb(248 113 113)"),

    RED_500("rgb(239 68 68)"),

    RED_600("rgb(220 38 38)"),

    RED_700("rgb(185 28 28)"),

    RED_800("rgb(153 27 27)"),

    RED_900("rgb(127 29 29)"),

    ORANGE_050("rgb(255 247 237)"),

    ORANGE_100("rgb(255 237 213)"),

    ORANGE_200("rgb(254 215 170)"),

    ORANGE_300("rgb(253 186 116)"),

    ORANGE_400("rgb(251 146 60)"),

    ORANGE_500("rgb(249 115 22)"),

    ORANGE_600("rgb(234 88 12)"),

    ORANGE_700("rgb(194 65 12)"),

    ORANGE_800("rgb(154 52 18)"),

    ORANGE_900("rgb(124 45 18)"),

    AMBER_050("rgb(255 251 235)"),

    AMBER_100("rgb(254 243 199)"),

    AMBER_200("rgb(253 230 138)"),

    AMBER_300("rgb(252 211 77)"),

    AMBER_400("rgb(251 191 36)"),

    AMBER_500("rgb(245 158 11)"),

    AMBER_600("rgb(217 119 6)"),

    AMBER_700("rgb(180 83 9)"),

    AMBER_800("rgb(146 64 14)"),

    AMBER_900("rgb(120 53 15)"),

    YELLOW_050("rgb(254 252 232)"),

    YELLOW_100("rgb(254 249 195)"),

    YELLOW_200("rgb(254 240 138)"),

    YELLOW_300("rgb(253 224 71)"),

    YELLOW_400("rgb(250 204 21)"),

    YELLOW_500("rgb(234 179 8)"),

    YELLOW_600("rgb(202 138 4)"),

    YELLOW_700("rgb(161 98 7)"),

    YELLOW_800("rgb(133 77 14)"),

    YELLOW_900("rgb(113 63 18)"),

    LIME_050("rgb(247 254 231)"),

    LIME_100("rgb(236 252 203)"),

    LIME_200("rgb(217 249 157)"),

    LIME_300("rgb(190 242 100)"),

    LIME_400("rgb(163 230 53)"),

    LIME_500("rgb(132 204 22)"),

    LIME_600("rgb(101 163 13)"),

    LIME_700("rgb(77 124 15)"),

    LIME_800("rgb(63 98 18)"),

    LIME_900("rgb(54 83 20)"),

    GREEN_050("rgb(240 253 244)"),

    GREEN_100("rgb(220 252 231)"),

    GREEN_200("rgb(187 247 208)"),

    GREEN_300("rgb(134 239 172)"),

    GREEN_400("rgb(74 222 128)"),

    GREEN_500("rgb(34 197 94)"),

    GREEN_600("rgb(22 163 74)"),

    GREEN_700("rgb(21 128 61)"),

    GREEN_800("rgb(22 101 52)"),

    GREEN_900("rgb(20 83 45)"),

    EMERALD_050("rgb(236 253 245)"),

    EMERALD_100("rgb(209 250 229)"),

    EMERALD_200("rgb(167 243 208)"),

    EMERALD_300("rgb(110 231 183)"),

    EMERALD_400("rgb(52 211 153)"),

    EMERALD_500("rgb(16 185 129)"),

    EMERALD_600("rgb(5 150 105)"),

    EMERALD_700("rgb(4 120 87)"),

    EMERALD_800("rgb(6 95 70)"),

    EMERALD_900("rgb(6 78 59)"),

    TEAL_050("rgb(240 253 250)"),

    TEAL_100("rgb(204 251 241)"),

    TEAL_200("rgb(153 246 228)"),

    TEAL_300("rgb(94 234 212)"),

    TEAL_400("rgb(45 212 191)"),

    TEAL_500("rgb(20 184 166)"),

    TEAL_600("rgb(13 148 136)"),

    TEAL_700("rgb(15 118 110)"),

    TEAL_800("rgb(17 94 89)"),

    TEAL_900("rgb(19 78 74)"),

    CYAN_050("rgb(236 254 255)"),

    CYAN_100("rgb(207 250 254)"),

    CYAN_200("rgb(165 243 252)"),

    CYAN_300("rgb(103 232 249)"),

    CYAN_400("rgb(34 211 238)"),

    CYAN_500("rgb(6 182 212)"),

    CYAN_600("rgb(8 145 178)"),

    CYAN_700("rgb(14 116 144)"),

    CYAN_800("rgb(21 94 117)"),

    CYAN_900("rgb(22 78 99)"),

    SKY_050("rgb(240 249 255)"),

    SKY_100("rgb(224 242 254)"),

    SKY_200("rgb(186 230 253)"),

    SKY_300("rgb(125 211 252)"),

    SKY_400("rgb(56 189 248)"),

    SKY_500("rgb(14 165 233)"),

    SKY_600("rgb(2 132 199)"),

    SKY_700("rgb(3 105 161)"),

    SKY_800("rgb(7 89 133)"),

    SKY_900("rgb(12 74 110)"),

    BLUE_050("rgb(239 246 255)"),

    BLUE_100("rgb(219 234 254)"),

    BLUE_200("rgb(191 219 254)"),

    BLUE_300("rgb(147 197 253)"),

    BLUE_400("rgb(96 165 250)"),

    BLUE_500("rgb(59 130 246)"),

    BLUE_600("rgb(37 99 235)"),

    BLUE_700("rgb(29 78 216)"),

    BLUE_800("rgb(30 64 175)"),

    BLUE_900("rgb(30 58 138)"),

    INDIGO_050("rgb(238 242 255)"),

    INDIGO_100("rgb(224 231 255)"),

    INDIGO_200("rgb(199 210 254)"),

    INDIGO_300("rgb(165 180 252)"),

    INDIGO_400("rgb(129 140 248)"),

    INDIGO_500("rgb(99 102 241)"),

    INDIGO_600("rgb(79 70 229)"),

    INDIGO_700("rgb(67 56 202)"),

    INDIGO_800("rgb(55 48 163)"),

    INDIGO_900("rgb(49 46 129)"),

    VIOLET_050("rgb(245 243 255)"),

    VIOLET_100("rgb(237 233 254)"),

    VIOLET_200("rgb(221 214 254)"),

    VIOLET_300("rgb(196 181 253)"),

    VIOLET_400("rgb(167 139 250)"),

    VIOLET_500("rgb(139 92 246)"),

    VIOLET_600("rgb(124 58 237)"),

    VIOLET_700("rgb(109 40 217)"),

    VIOLET_800("rgb(91 33 182)"),

    VIOLET_900("rgb(76 29 149)"),

    PURPLE_050("rgb(250 245 255)"),

    PURPLE_100("rgb(243 232 255)"),

    PURPLE_200("rgb(233 213 255)"),

    PURPLE_300("rgb(216 180 254)"),

    PURPLE_400("rgb(192 132 252)"),

    PURPLE_500("rgb(168 85 247)"),

    PURPLE_600("rgb(147 51 234)"),

    PURPLE_700("rgb(126 34 206)"),

    PURPLE_800("rgb(107 33 168)"),

    PURPLE_900("rgb(88 28 135)"),

    FUCHSIA_050("rgb(253 244 255)"),

    FUCHSIA_100("rgb(250 232 255)"),

    FUCHSIA_200("rgb(245 208 254)"),

    FUCHSIA_300("rgb(240 171 252)"),

    FUCHSIA_400("rgb(232 121 249)"),

    FUCHSIA_500("rgb(217 70 239)"),

    FUCHSIA_600("rgb(192 38 211)"),

    FUCHSIA_700("rgb(162 28 175)"),

    FUCHSIA_800("rgb(134 25 143)"),

    FUCHSIA_900("rgb(112 26 117)"),

    PINK_050("rgb(253 242 248)"),

    PINK_100("rgb(252 231 243)"),

    PINK_200("rgb(251 207 232)"),

    PINK_300("rgb(249 168 212)"),

    PINK_400("rgb(244 114 182)"),

    PINK_500("rgb(236 72 153)"),

    PINK_600("rgb(219 39 119)"),

    PINK_700("rgb(190 24 93)"),

    PINK_800("rgb(157 23 77)"),

    PINK_900("rgb(131 24 67)"),

    ROSE_050("rgb(255 241 242)"),

    ROSE_100("rgb(255 228 230)"),

    ROSE_200("rgb(254 205 211)"),

    ROSE_300("rgb(253 164 175)"),

    ROSE_400("rgb(251 113 133)"),

    ROSE_500("rgb(244 63 94)"),

    ROSE_600("rgb(225 29 72)"),

    ROSE_700("rgb(190 18 60)"),

    ROSE_800("rgb(159 18 57)"),

    ROSE_900("rgb(136 19 55)");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private BorderColor(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { border-color: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code border-top-color} CSS property.
   */
  public enum BorderTopColor implements StyleClass {

    INHERIT("inherit"),

    CURRENT("currentColor"),

    TRANSPARENT("transparent"),

    BLACK("rgb(0 0 0)"),

    WHITE("rgb(255 255 255)"),

    SLATE_050("rgb(248 250 252)"),

    SLATE_100("rgb(241 245 249)"),

    SLATE_200("rgb(226 232 240)"),

    SLATE_300("rgb(203 213 225)"),

    SLATE_400("rgb(148 163 184)"),

    SLATE_500("rgb(100 116 139)"),

    SLATE_600("rgb(71 85 105)"),

    SLATE_700("rgb(51 65 85)"),

    SLATE_800("rgb(30 41 59)"),

    SLATE_900("rgb(15 23 42)"),

    GRAY_050("rgb(249 250 251)"),

    GRAY_100("rgb(243 244 246)"),

    GRAY_200("rgb(229 231 235)"),

    GRAY_300("rgb(209 213 219)"),

    GRAY_400("rgb(156 163 175)"),

    GRAY_500("rgb(107 114 128)"),

    GRAY_600("rgb(75 85 99)"),

    GRAY_700("rgb(55 65 81)"),

    GRAY_800("rgb(31 41 55)"),

    GRAY_900("rgb(17 24 39)"),

    ZINC_050("rgb(250 250 250)"),

    ZINC_100("rgb(244 244 245)"),

    ZINC_200("rgb(228 228 231)"),

    ZINC_300("rgb(212 212 216)"),

    ZINC_400("rgb(161 161 170)"),

    ZINC_500("rgb(113 113 122)"),

    ZINC_600("rgb(82 82 91)"),

    ZINC_700("rgb(63 63 70)"),

    ZINC_800("rgb(39 39 42)"),

    ZINC_900("rgb(24 24 27)"),

    NEUTRAL_050("rgb(250 250 250)"),

    NEUTRAL_100("rgb(245 245 245)"),

    NEUTRAL_200("rgb(229 229 229)"),

    NEUTRAL_300("rgb(212 212 212)"),

    NEUTRAL_400("rgb(163 163 163)"),

    NEUTRAL_500("rgb(115 115 115)"),

    NEUTRAL_600("rgb(82 82 82)"),

    NEUTRAL_700("rgb(64 64 64)"),

    NEUTRAL_800("rgb(38 38 38)"),

    NEUTRAL_900("rgb(23 23 23)"),

    STONE_050("rgb(250 250 249)"),

    STONE_100("rgb(245 245 244)"),

    STONE_200("rgb(231 229 228)"),

    STONE_300("rgb(214 211 209)"),

    STONE_400("rgb(168 162 158)"),

    STONE_500("rgb(120 113 108)"),

    STONE_600("rgb(87 83 78)"),

    STONE_700("rgb(68 64 60)"),

    STONE_800("rgb(41 37 36)"),

    STONE_900("rgb(28 25 23)"),

    RED_050("rgb(254 242 242)"),

    RED_100("rgb(254 226 226)"),

    RED_200("rgb(254 202 202)"),

    RED_300("rgb(252 165 165)"),

    RED_400("rgb(248 113 113)"),

    RED_500("rgb(239 68 68)"),

    RED_600("rgb(220 38 38)"),

    RED_700("rgb(185 28 28)"),

    RED_800("rgb(153 27 27)"),

    RED_900("rgb(127 29 29)"),

    ORANGE_050("rgb(255 247 237)"),

    ORANGE_100("rgb(255 237 213)"),

    ORANGE_200("rgb(254 215 170)"),

    ORANGE_300("rgb(253 186 116)"),

    ORANGE_400("rgb(251 146 60)"),

    ORANGE_500("rgb(249 115 22)"),

    ORANGE_600("rgb(234 88 12)"),

    ORANGE_700("rgb(194 65 12)"),

    ORANGE_800("rgb(154 52 18)"),

    ORANGE_900("rgb(124 45 18)"),

    AMBER_050("rgb(255 251 235)"),

    AMBER_100("rgb(254 243 199)"),

    AMBER_200("rgb(253 230 138)"),

    AMBER_300("rgb(252 211 77)"),

    AMBER_400("rgb(251 191 36)"),

    AMBER_500("rgb(245 158 11)"),

    AMBER_600("rgb(217 119 6)"),

    AMBER_700("rgb(180 83 9)"),

    AMBER_800("rgb(146 64 14)"),

    AMBER_900("rgb(120 53 15)"),

    YELLOW_050("rgb(254 252 232)"),

    YELLOW_100("rgb(254 249 195)"),

    YELLOW_200("rgb(254 240 138)"),

    YELLOW_300("rgb(253 224 71)"),

    YELLOW_400("rgb(250 204 21)"),

    YELLOW_500("rgb(234 179 8)"),

    YELLOW_600("rgb(202 138 4)"),

    YELLOW_700("rgb(161 98 7)"),

    YELLOW_800("rgb(133 77 14)"),

    YELLOW_900("rgb(113 63 18)"),

    LIME_050("rgb(247 254 231)"),

    LIME_100("rgb(236 252 203)"),

    LIME_200("rgb(217 249 157)"),

    LIME_300("rgb(190 242 100)"),

    LIME_400("rgb(163 230 53)"),

    LIME_500("rgb(132 204 22)"),

    LIME_600("rgb(101 163 13)"),

    LIME_700("rgb(77 124 15)"),

    LIME_800("rgb(63 98 18)"),

    LIME_900("rgb(54 83 20)"),

    GREEN_050("rgb(240 253 244)"),

    GREEN_100("rgb(220 252 231)"),

    GREEN_200("rgb(187 247 208)"),

    GREEN_300("rgb(134 239 172)"),

    GREEN_400("rgb(74 222 128)"),

    GREEN_500("rgb(34 197 94)"),

    GREEN_600("rgb(22 163 74)"),

    GREEN_700("rgb(21 128 61)"),

    GREEN_800("rgb(22 101 52)"),

    GREEN_900("rgb(20 83 45)"),

    EMERALD_050("rgb(236 253 245)"),

    EMERALD_100("rgb(209 250 229)"),

    EMERALD_200("rgb(167 243 208)"),

    EMERALD_300("rgb(110 231 183)"),

    EMERALD_400("rgb(52 211 153)"),

    EMERALD_500("rgb(16 185 129)"),

    EMERALD_600("rgb(5 150 105)"),

    EMERALD_700("rgb(4 120 87)"),

    EMERALD_800("rgb(6 95 70)"),

    EMERALD_900("rgb(6 78 59)"),

    TEAL_050("rgb(240 253 250)"),

    TEAL_100("rgb(204 251 241)"),

    TEAL_200("rgb(153 246 228)"),

    TEAL_300("rgb(94 234 212)"),

    TEAL_400("rgb(45 212 191)"),

    TEAL_500("rgb(20 184 166)"),

    TEAL_600("rgb(13 148 136)"),

    TEAL_700("rgb(15 118 110)"),

    TEAL_800("rgb(17 94 89)"),

    TEAL_900("rgb(19 78 74)"),

    CYAN_050("rgb(236 254 255)"),

    CYAN_100("rgb(207 250 254)"),

    CYAN_200("rgb(165 243 252)"),

    CYAN_300("rgb(103 232 249)"),

    CYAN_400("rgb(34 211 238)"),

    CYAN_500("rgb(6 182 212)"),

    CYAN_600("rgb(8 145 178)"),

    CYAN_700("rgb(14 116 144)"),

    CYAN_800("rgb(21 94 117)"),

    CYAN_900("rgb(22 78 99)"),

    SKY_050("rgb(240 249 255)"),

    SKY_100("rgb(224 242 254)"),

    SKY_200("rgb(186 230 253)"),

    SKY_300("rgb(125 211 252)"),

    SKY_400("rgb(56 189 248)"),

    SKY_500("rgb(14 165 233)"),

    SKY_600("rgb(2 132 199)"),

    SKY_700("rgb(3 105 161)"),

    SKY_800("rgb(7 89 133)"),

    SKY_900("rgb(12 74 110)"),

    BLUE_050("rgb(239 246 255)"),

    BLUE_100("rgb(219 234 254)"),

    BLUE_200("rgb(191 219 254)"),

    BLUE_300("rgb(147 197 253)"),

    BLUE_400("rgb(96 165 250)"),

    BLUE_500("rgb(59 130 246)"),

    BLUE_600("rgb(37 99 235)"),

    BLUE_700("rgb(29 78 216)"),

    BLUE_800("rgb(30 64 175)"),

    BLUE_900("rgb(30 58 138)"),

    INDIGO_050("rgb(238 242 255)"),

    INDIGO_100("rgb(224 231 255)"),

    INDIGO_200("rgb(199 210 254)"),

    INDIGO_300("rgb(165 180 252)"),

    INDIGO_400("rgb(129 140 248)"),

    INDIGO_500("rgb(99 102 241)"),

    INDIGO_600("rgb(79 70 229)"),

    INDIGO_700("rgb(67 56 202)"),

    INDIGO_800("rgb(55 48 163)"),

    INDIGO_900("rgb(49 46 129)"),

    VIOLET_050("rgb(245 243 255)"),

    VIOLET_100("rgb(237 233 254)"),

    VIOLET_200("rgb(221 214 254)"),

    VIOLET_300("rgb(196 181 253)"),

    VIOLET_400("rgb(167 139 250)"),

    VIOLET_500("rgb(139 92 246)"),

    VIOLET_600("rgb(124 58 237)"),

    VIOLET_700("rgb(109 40 217)"),

    VIOLET_800("rgb(91 33 182)"),

    VIOLET_900("rgb(76 29 149)"),

    PURPLE_050("rgb(250 245 255)"),

    PURPLE_100("rgb(243 232 255)"),

    PURPLE_200("rgb(233 213 255)"),

    PURPLE_300("rgb(216 180 254)"),

    PURPLE_400("rgb(192 132 252)"),

    PURPLE_500("rgb(168 85 247)"),

    PURPLE_600("rgb(147 51 234)"),

    PURPLE_700("rgb(126 34 206)"),

    PURPLE_800("rgb(107 33 168)"),

    PURPLE_900("rgb(88 28 135)"),

    FUCHSIA_050("rgb(253 244 255)"),

    FUCHSIA_100("rgb(250 232 255)"),

    FUCHSIA_200("rgb(245 208 254)"),

    FUCHSIA_300("rgb(240 171 252)"),

    FUCHSIA_400("rgb(232 121 249)"),

    FUCHSIA_500("rgb(217 70 239)"),

    FUCHSIA_600("rgb(192 38 211)"),

    FUCHSIA_700("rgb(162 28 175)"),

    FUCHSIA_800("rgb(134 25 143)"),

    FUCHSIA_900("rgb(112 26 117)"),

    PINK_050("rgb(253 242 248)"),

    PINK_100("rgb(252 231 243)"),

    PINK_200("rgb(251 207 232)"),

    PINK_300("rgb(249 168 212)"),

    PINK_400("rgb(244 114 182)"),

    PINK_500("rgb(236 72 153)"),

    PINK_600("rgb(219 39 119)"),

    PINK_700("rgb(190 24 93)"),

    PINK_800("rgb(157 23 77)"),

    PINK_900("rgb(131 24 67)"),

    ROSE_050("rgb(255 241 242)"),

    ROSE_100("rgb(255 228 230)"),

    ROSE_200("rgb(254 205 211)"),

    ROSE_300("rgb(253 164 175)"),

    ROSE_400("rgb(251 113 133)"),

    ROSE_500("rgb(244 63 94)"),

    ROSE_600("rgb(225 29 72)"),

    ROSE_700("rgb(190 18 60)"),

    ROSE_800("rgb(159 18 57)"),

    ROSE_900("rgb(136 19 55)");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private BorderTopColor(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { border-top-color: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code border-right-color} CSS property.
   */
  public enum BorderRightColor implements StyleClass {

    INHERIT("inherit"),

    CURRENT("currentColor"),

    TRANSPARENT("transparent"),

    BLACK("rgb(0 0 0)"),

    WHITE("rgb(255 255 255)"),

    SLATE_050("rgb(248 250 252)"),

    SLATE_100("rgb(241 245 249)"),

    SLATE_200("rgb(226 232 240)"),

    SLATE_300("rgb(203 213 225)"),

    SLATE_400("rgb(148 163 184)"),

    SLATE_500("rgb(100 116 139)"),

    SLATE_600("rgb(71 85 105)"),

    SLATE_700("rgb(51 65 85)"),

    SLATE_800("rgb(30 41 59)"),

    SLATE_900("rgb(15 23 42)"),

    GRAY_050("rgb(249 250 251)"),

    GRAY_100("rgb(243 244 246)"),

    GRAY_200("rgb(229 231 235)"),

    GRAY_300("rgb(209 213 219)"),

    GRAY_400("rgb(156 163 175)"),

    GRAY_500("rgb(107 114 128)"),

    GRAY_600("rgb(75 85 99)"),

    GRAY_700("rgb(55 65 81)"),

    GRAY_800("rgb(31 41 55)"),

    GRAY_900("rgb(17 24 39)"),

    ZINC_050("rgb(250 250 250)"),

    ZINC_100("rgb(244 244 245)"),

    ZINC_200("rgb(228 228 231)"),

    ZINC_300("rgb(212 212 216)"),

    ZINC_400("rgb(161 161 170)"),

    ZINC_500("rgb(113 113 122)"),

    ZINC_600("rgb(82 82 91)"),

    ZINC_700("rgb(63 63 70)"),

    ZINC_800("rgb(39 39 42)"),

    ZINC_900("rgb(24 24 27)"),

    NEUTRAL_050("rgb(250 250 250)"),

    NEUTRAL_100("rgb(245 245 245)"),

    NEUTRAL_200("rgb(229 229 229)"),

    NEUTRAL_300("rgb(212 212 212)"),

    NEUTRAL_400("rgb(163 163 163)"),

    NEUTRAL_500("rgb(115 115 115)"),

    NEUTRAL_600("rgb(82 82 82)"),

    NEUTRAL_700("rgb(64 64 64)"),

    NEUTRAL_800("rgb(38 38 38)"),

    NEUTRAL_900("rgb(23 23 23)"),

    STONE_050("rgb(250 250 249)"),

    STONE_100("rgb(245 245 244)"),

    STONE_200("rgb(231 229 228)"),

    STONE_300("rgb(214 211 209)"),

    STONE_400("rgb(168 162 158)"),

    STONE_500("rgb(120 113 108)"),

    STONE_600("rgb(87 83 78)"),

    STONE_700("rgb(68 64 60)"),

    STONE_800("rgb(41 37 36)"),

    STONE_900("rgb(28 25 23)"),

    RED_050("rgb(254 242 242)"),

    RED_100("rgb(254 226 226)"),

    RED_200("rgb(254 202 202)"),

    RED_300("rgb(252 165 165)"),

    RED_400("rgb(248 113 113)"),

    RED_500("rgb(239 68 68)"),

    RED_600("rgb(220 38 38)"),

    RED_700("rgb(185 28 28)"),

    RED_800("rgb(153 27 27)"),

    RED_900("rgb(127 29 29)"),

    ORANGE_050("rgb(255 247 237)"),

    ORANGE_100("rgb(255 237 213)"),

    ORANGE_200("rgb(254 215 170)"),

    ORANGE_300("rgb(253 186 116)"),

    ORANGE_400("rgb(251 146 60)"),

    ORANGE_500("rgb(249 115 22)"),

    ORANGE_600("rgb(234 88 12)"),

    ORANGE_700("rgb(194 65 12)"),

    ORANGE_800("rgb(154 52 18)"),

    ORANGE_900("rgb(124 45 18)"),

    AMBER_050("rgb(255 251 235)"),

    AMBER_100("rgb(254 243 199)"),

    AMBER_200("rgb(253 230 138)"),

    AMBER_300("rgb(252 211 77)"),

    AMBER_400("rgb(251 191 36)"),

    AMBER_500("rgb(245 158 11)"),

    AMBER_600("rgb(217 119 6)"),

    AMBER_700("rgb(180 83 9)"),

    AMBER_800("rgb(146 64 14)"),

    AMBER_900("rgb(120 53 15)"),

    YELLOW_050("rgb(254 252 232)"),

    YELLOW_100("rgb(254 249 195)"),

    YELLOW_200("rgb(254 240 138)"),

    YELLOW_300("rgb(253 224 71)"),

    YELLOW_400("rgb(250 204 21)"),

    YELLOW_500("rgb(234 179 8)"),

    YELLOW_600("rgb(202 138 4)"),

    YELLOW_700("rgb(161 98 7)"),

    YELLOW_800("rgb(133 77 14)"),

    YELLOW_900("rgb(113 63 18)"),

    LIME_050("rgb(247 254 231)"),

    LIME_100("rgb(236 252 203)"),

    LIME_200("rgb(217 249 157)"),

    LIME_300("rgb(190 242 100)"),

    LIME_400("rgb(163 230 53)"),

    LIME_500("rgb(132 204 22)"),

    LIME_600("rgb(101 163 13)"),

    LIME_700("rgb(77 124 15)"),

    LIME_800("rgb(63 98 18)"),

    LIME_900("rgb(54 83 20)"),

    GREEN_050("rgb(240 253 244)"),

    GREEN_100("rgb(220 252 231)"),

    GREEN_200("rgb(187 247 208)"),

    GREEN_300("rgb(134 239 172)"),

    GREEN_400("rgb(74 222 128)"),

    GREEN_500("rgb(34 197 94)"),

    GREEN_600("rgb(22 163 74)"),

    GREEN_700("rgb(21 128 61)"),

    GREEN_800("rgb(22 101 52)"),

    GREEN_900("rgb(20 83 45)"),

    EMERALD_050("rgb(236 253 245)"),

    EMERALD_100("rgb(209 250 229)"),

    EMERALD_200("rgb(167 243 208)"),

    EMERALD_300("rgb(110 231 183)"),

    EMERALD_400("rgb(52 211 153)"),

    EMERALD_500("rgb(16 185 129)"),

    EMERALD_600("rgb(5 150 105)"),

    EMERALD_700("rgb(4 120 87)"),

    EMERALD_800("rgb(6 95 70)"),

    EMERALD_900("rgb(6 78 59)"),

    TEAL_050("rgb(240 253 250)"),

    TEAL_100("rgb(204 251 241)"),

    TEAL_200("rgb(153 246 228)"),

    TEAL_300("rgb(94 234 212)"),

    TEAL_400("rgb(45 212 191)"),

    TEAL_500("rgb(20 184 166)"),

    TEAL_600("rgb(13 148 136)"),

    TEAL_700("rgb(15 118 110)"),

    TEAL_800("rgb(17 94 89)"),

    TEAL_900("rgb(19 78 74)"),

    CYAN_050("rgb(236 254 255)"),

    CYAN_100("rgb(207 250 254)"),

    CYAN_200("rgb(165 243 252)"),

    CYAN_300("rgb(103 232 249)"),

    CYAN_400("rgb(34 211 238)"),

    CYAN_500("rgb(6 182 212)"),

    CYAN_600("rgb(8 145 178)"),

    CYAN_700("rgb(14 116 144)"),

    CYAN_800("rgb(21 94 117)"),

    CYAN_900("rgb(22 78 99)"),

    SKY_050("rgb(240 249 255)"),

    SKY_100("rgb(224 242 254)"),

    SKY_200("rgb(186 230 253)"),

    SKY_300("rgb(125 211 252)"),

    SKY_400("rgb(56 189 248)"),

    SKY_500("rgb(14 165 233)"),

    SKY_600("rgb(2 132 199)"),

    SKY_700("rgb(3 105 161)"),

    SKY_800("rgb(7 89 133)"),

    SKY_900("rgb(12 74 110)"),

    BLUE_050("rgb(239 246 255)"),

    BLUE_100("rgb(219 234 254)"),

    BLUE_200("rgb(191 219 254)"),

    BLUE_300("rgb(147 197 253)"),

    BLUE_400("rgb(96 165 250)"),

    BLUE_500("rgb(59 130 246)"),

    BLUE_600("rgb(37 99 235)"),

    BLUE_700("rgb(29 78 216)"),

    BLUE_800("rgb(30 64 175)"),

    BLUE_900("rgb(30 58 138)"),

    INDIGO_050("rgb(238 242 255)"),

    INDIGO_100("rgb(224 231 255)"),

    INDIGO_200("rgb(199 210 254)"),

    INDIGO_300("rgb(165 180 252)"),

    INDIGO_400("rgb(129 140 248)"),

    INDIGO_500("rgb(99 102 241)"),

    INDIGO_600("rgb(79 70 229)"),

    INDIGO_700("rgb(67 56 202)"),

    INDIGO_800("rgb(55 48 163)"),

    INDIGO_900("rgb(49 46 129)"),

    VIOLET_050("rgb(245 243 255)"),

    VIOLET_100("rgb(237 233 254)"),

    VIOLET_200("rgb(221 214 254)"),

    VIOLET_300("rgb(196 181 253)"),

    VIOLET_400("rgb(167 139 250)"),

    VIOLET_500("rgb(139 92 246)"),

    VIOLET_600("rgb(124 58 237)"),

    VIOLET_700("rgb(109 40 217)"),

    VIOLET_800("rgb(91 33 182)"),

    VIOLET_900("rgb(76 29 149)"),

    PURPLE_050("rgb(250 245 255)"),

    PURPLE_100("rgb(243 232 255)"),

    PURPLE_200("rgb(233 213 255)"),

    PURPLE_300("rgb(216 180 254)"),

    PURPLE_400("rgb(192 132 252)"),

    PURPLE_500("rgb(168 85 247)"),

    PURPLE_600("rgb(147 51 234)"),

    PURPLE_700("rgb(126 34 206)"),

    PURPLE_800("rgb(107 33 168)"),

    PURPLE_900("rgb(88 28 135)"),

    FUCHSIA_050("rgb(253 244 255)"),

    FUCHSIA_100("rgb(250 232 255)"),

    FUCHSIA_200("rgb(245 208 254)"),

    FUCHSIA_300("rgb(240 171 252)"),

    FUCHSIA_400("rgb(232 121 249)"),

    FUCHSIA_500("rgb(217 70 239)"),

    FUCHSIA_600("rgb(192 38 211)"),

    FUCHSIA_700("rgb(162 28 175)"),

    FUCHSIA_800("rgb(134 25 143)"),

    FUCHSIA_900("rgb(112 26 117)"),

    PINK_050("rgb(253 242 248)"),

    PINK_100("rgb(252 231 243)"),

    PINK_200("rgb(251 207 232)"),

    PINK_300("rgb(249 168 212)"),

    PINK_400("rgb(244 114 182)"),

    PINK_500("rgb(236 72 153)"),

    PINK_600("rgb(219 39 119)"),

    PINK_700("rgb(190 24 93)"),

    PINK_800("rgb(157 23 77)"),

    PINK_900("rgb(131 24 67)"),

    ROSE_050("rgb(255 241 242)"),

    ROSE_100("rgb(255 228 230)"),

    ROSE_200("rgb(254 205 211)"),

    ROSE_300("rgb(253 164 175)"),

    ROSE_400("rgb(251 113 133)"),

    ROSE_500("rgb(244 63 94)"),

    ROSE_600("rgb(225 29 72)"),

    ROSE_700("rgb(190 18 60)"),

    ROSE_800("rgb(159 18 57)"),

    ROSE_900("rgb(136 19 55)");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private BorderRightColor(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { border-right-color: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code border-bottom-color} CSS property.
   */
  public enum BorderBottomColor implements StyleClass {

    INHERIT("inherit"),

    CURRENT("currentColor"),

    TRANSPARENT("transparent"),

    BLACK("rgb(0 0 0)"),

    WHITE("rgb(255 255 255)"),

    SLATE_050("rgb(248 250 252)"),

    SLATE_100("rgb(241 245 249)"),

    SLATE_200("rgb(226 232 240)"),

    SLATE_300("rgb(203 213 225)"),

    SLATE_400("rgb(148 163 184)"),

    SLATE_500("rgb(100 116 139)"),

    SLATE_600("rgb(71 85 105)"),

    SLATE_700("rgb(51 65 85)"),

    SLATE_800("rgb(30 41 59)"),

    SLATE_900("rgb(15 23 42)"),

    GRAY_050("rgb(249 250 251)"),

    GRAY_100("rgb(243 244 246)"),

    GRAY_200("rgb(229 231 235)"),

    GRAY_300("rgb(209 213 219)"),

    GRAY_400("rgb(156 163 175)"),

    GRAY_500("rgb(107 114 128)"),

    GRAY_600("rgb(75 85 99)"),

    GRAY_700("rgb(55 65 81)"),

    GRAY_800("rgb(31 41 55)"),

    GRAY_900("rgb(17 24 39)"),

    ZINC_050("rgb(250 250 250)"),

    ZINC_100("rgb(244 244 245)"),

    ZINC_200("rgb(228 228 231)"),

    ZINC_300("rgb(212 212 216)"),

    ZINC_400("rgb(161 161 170)"),

    ZINC_500("rgb(113 113 122)"),

    ZINC_600("rgb(82 82 91)"),

    ZINC_700("rgb(63 63 70)"),

    ZINC_800("rgb(39 39 42)"),

    ZINC_900("rgb(24 24 27)"),

    NEUTRAL_050("rgb(250 250 250)"),

    NEUTRAL_100("rgb(245 245 245)"),

    NEUTRAL_200("rgb(229 229 229)"),

    NEUTRAL_300("rgb(212 212 212)"),

    NEUTRAL_400("rgb(163 163 163)"),

    NEUTRAL_500("rgb(115 115 115)"),

    NEUTRAL_600("rgb(82 82 82)"),

    NEUTRAL_700("rgb(64 64 64)"),

    NEUTRAL_800("rgb(38 38 38)"),

    NEUTRAL_900("rgb(23 23 23)"),

    STONE_050("rgb(250 250 249)"),

    STONE_100("rgb(245 245 244)"),

    STONE_200("rgb(231 229 228)"),

    STONE_300("rgb(214 211 209)"),

    STONE_400("rgb(168 162 158)"),

    STONE_500("rgb(120 113 108)"),

    STONE_600("rgb(87 83 78)"),

    STONE_700("rgb(68 64 60)"),

    STONE_800("rgb(41 37 36)"),

    STONE_900("rgb(28 25 23)"),

    RED_050("rgb(254 242 242)"),

    RED_100("rgb(254 226 226)"),

    RED_200("rgb(254 202 202)"),

    RED_300("rgb(252 165 165)"),

    RED_400("rgb(248 113 113)"),

    RED_500("rgb(239 68 68)"),

    RED_600("rgb(220 38 38)"),

    RED_700("rgb(185 28 28)"),

    RED_800("rgb(153 27 27)"),

    RED_900("rgb(127 29 29)"),

    ORANGE_050("rgb(255 247 237)"),

    ORANGE_100("rgb(255 237 213)"),

    ORANGE_200("rgb(254 215 170)"),

    ORANGE_300("rgb(253 186 116)"),

    ORANGE_400("rgb(251 146 60)"),

    ORANGE_500("rgb(249 115 22)"),

    ORANGE_600("rgb(234 88 12)"),

    ORANGE_700("rgb(194 65 12)"),

    ORANGE_800("rgb(154 52 18)"),

    ORANGE_900("rgb(124 45 18)"),

    AMBER_050("rgb(255 251 235)"),

    AMBER_100("rgb(254 243 199)"),

    AMBER_200("rgb(253 230 138)"),

    AMBER_300("rgb(252 211 77)"),

    AMBER_400("rgb(251 191 36)"),

    AMBER_500("rgb(245 158 11)"),

    AMBER_600("rgb(217 119 6)"),

    AMBER_700("rgb(180 83 9)"),

    AMBER_800("rgb(146 64 14)"),

    AMBER_900("rgb(120 53 15)"),

    YELLOW_050("rgb(254 252 232)"),

    YELLOW_100("rgb(254 249 195)"),

    YELLOW_200("rgb(254 240 138)"),

    YELLOW_300("rgb(253 224 71)"),

    YELLOW_400("rgb(250 204 21)"),

    YELLOW_500("rgb(234 179 8)"),

    YELLOW_600("rgb(202 138 4)"),

    YELLOW_700("rgb(161 98 7)"),

    YELLOW_800("rgb(133 77 14)"),

    YELLOW_900("rgb(113 63 18)"),

    LIME_050("rgb(247 254 231)"),

    LIME_100("rgb(236 252 203)"),

    LIME_200("rgb(217 249 157)"),

    LIME_300("rgb(190 242 100)"),

    LIME_400("rgb(163 230 53)"),

    LIME_500("rgb(132 204 22)"),

    LIME_600("rgb(101 163 13)"),

    LIME_700("rgb(77 124 15)"),

    LIME_800("rgb(63 98 18)"),

    LIME_900("rgb(54 83 20)"),

    GREEN_050("rgb(240 253 244)"),

    GREEN_100("rgb(220 252 231)"),

    GREEN_200("rgb(187 247 208)"),

    GREEN_300("rgb(134 239 172)"),

    GREEN_400("rgb(74 222 128)"),

    GREEN_500("rgb(34 197 94)"),

    GREEN_600("rgb(22 163 74)"),

    GREEN_700("rgb(21 128 61)"),

    GREEN_800("rgb(22 101 52)"),

    GREEN_900("rgb(20 83 45)"),

    EMERALD_050("rgb(236 253 245)"),

    EMERALD_100("rgb(209 250 229)"),

    EMERALD_200("rgb(167 243 208)"),

    EMERALD_300("rgb(110 231 183)"),

    EMERALD_400("rgb(52 211 153)"),

    EMERALD_500("rgb(16 185 129)"),

    EMERALD_600("rgb(5 150 105)"),

    EMERALD_700("rgb(4 120 87)"),

    EMERALD_800("rgb(6 95 70)"),

    EMERALD_900("rgb(6 78 59)"),

    TEAL_050("rgb(240 253 250)"),

    TEAL_100("rgb(204 251 241)"),

    TEAL_200("rgb(153 246 228)"),

    TEAL_300("rgb(94 234 212)"),

    TEAL_400("rgb(45 212 191)"),

    TEAL_500("rgb(20 184 166)"),

    TEAL_600("rgb(13 148 136)"),

    TEAL_700("rgb(15 118 110)"),

    TEAL_800("rgb(17 94 89)"),

    TEAL_900("rgb(19 78 74)"),

    CYAN_050("rgb(236 254 255)"),

    CYAN_100("rgb(207 250 254)"),

    CYAN_200("rgb(165 243 252)"),

    CYAN_300("rgb(103 232 249)"),

    CYAN_400("rgb(34 211 238)"),

    CYAN_500("rgb(6 182 212)"),

    CYAN_600("rgb(8 145 178)"),

    CYAN_700("rgb(14 116 144)"),

    CYAN_800("rgb(21 94 117)"),

    CYAN_900("rgb(22 78 99)"),

    SKY_050("rgb(240 249 255)"),

    SKY_100("rgb(224 242 254)"),

    SKY_200("rgb(186 230 253)"),

    SKY_300("rgb(125 211 252)"),

    SKY_400("rgb(56 189 248)"),

    SKY_500("rgb(14 165 233)"),

    SKY_600("rgb(2 132 199)"),

    SKY_700("rgb(3 105 161)"),

    SKY_800("rgb(7 89 133)"),

    SKY_900("rgb(12 74 110)"),

    BLUE_050("rgb(239 246 255)"),

    BLUE_100("rgb(219 234 254)"),

    BLUE_200("rgb(191 219 254)"),

    BLUE_300("rgb(147 197 253)"),

    BLUE_400("rgb(96 165 250)"),

    BLUE_500("rgb(59 130 246)"),

    BLUE_600("rgb(37 99 235)"),

    BLUE_700("rgb(29 78 216)"),

    BLUE_800("rgb(30 64 175)"),

    BLUE_900("rgb(30 58 138)"),

    INDIGO_050("rgb(238 242 255)"),

    INDIGO_100("rgb(224 231 255)"),

    INDIGO_200("rgb(199 210 254)"),

    INDIGO_300("rgb(165 180 252)"),

    INDIGO_400("rgb(129 140 248)"),

    INDIGO_500("rgb(99 102 241)"),

    INDIGO_600("rgb(79 70 229)"),

    INDIGO_700("rgb(67 56 202)"),

    INDIGO_800("rgb(55 48 163)"),

    INDIGO_900("rgb(49 46 129)"),

    VIOLET_050("rgb(245 243 255)"),

    VIOLET_100("rgb(237 233 254)"),

    VIOLET_200("rgb(221 214 254)"),

    VIOLET_300("rgb(196 181 253)"),

    VIOLET_400("rgb(167 139 250)"),

    VIOLET_500("rgb(139 92 246)"),

    VIOLET_600("rgb(124 58 237)"),

    VIOLET_700("rgb(109 40 217)"),

    VIOLET_800("rgb(91 33 182)"),

    VIOLET_900("rgb(76 29 149)"),

    PURPLE_050("rgb(250 245 255)"),

    PURPLE_100("rgb(243 232 255)"),

    PURPLE_200("rgb(233 213 255)"),

    PURPLE_300("rgb(216 180 254)"),

    PURPLE_400("rgb(192 132 252)"),

    PURPLE_500("rgb(168 85 247)"),

    PURPLE_600("rgb(147 51 234)"),

    PURPLE_700("rgb(126 34 206)"),

    PURPLE_800("rgb(107 33 168)"),

    PURPLE_900("rgb(88 28 135)"),

    FUCHSIA_050("rgb(253 244 255)"),

    FUCHSIA_100("rgb(250 232 255)"),

    FUCHSIA_200("rgb(245 208 254)"),

    FUCHSIA_300("rgb(240 171 252)"),

    FUCHSIA_400("rgb(232 121 249)"),

    FUCHSIA_500("rgb(217 70 239)"),

    FUCHSIA_600("rgb(192 38 211)"),

    FUCHSIA_700("rgb(162 28 175)"),

    FUCHSIA_800("rgb(134 25 143)"),

    FUCHSIA_900("rgb(112 26 117)"),

    PINK_050("rgb(253 242 248)"),

    PINK_100("rgb(252 231 243)"),

    PINK_200("rgb(251 207 232)"),

    PINK_300("rgb(249 168 212)"),

    PINK_400("rgb(244 114 182)"),

    PINK_500("rgb(236 72 153)"),

    PINK_600("rgb(219 39 119)"),

    PINK_700("rgb(190 24 93)"),

    PINK_800("rgb(157 23 77)"),

    PINK_900("rgb(131 24 67)"),

    ROSE_050("rgb(255 241 242)"),

    ROSE_100("rgb(255 228 230)"),

    ROSE_200("rgb(254 205 211)"),

    ROSE_300("rgb(253 164 175)"),

    ROSE_400("rgb(251 113 133)"),

    ROSE_500("rgb(244 63 94)"),

    ROSE_600("rgb(225 29 72)"),

    ROSE_700("rgb(190 18 60)"),

    ROSE_800("rgb(159 18 57)"),

    ROSE_900("rgb(136 19 55)");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private BorderBottomColor(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { border-bottom-color: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code border-left-color} CSS property.
   */
  public enum BorderLeftColor implements StyleClass {

    INHERIT("inherit"),

    CURRENT("currentColor"),

    TRANSPARENT("transparent"),

    BLACK("rgb(0 0 0)"),

    WHITE("rgb(255 255 255)"),

    SLATE_050("rgb(248 250 252)"),

    SLATE_100("rgb(241 245 249)"),

    SLATE_200("rgb(226 232 240)"),

    SLATE_300("rgb(203 213 225)"),

    SLATE_400("rgb(148 163 184)"),

    SLATE_500("rgb(100 116 139)"),

    SLATE_600("rgb(71 85 105)"),

    SLATE_700("rgb(51 65 85)"),

    SLATE_800("rgb(30 41 59)"),

    SLATE_900("rgb(15 23 42)"),

    GRAY_050("rgb(249 250 251)"),

    GRAY_100("rgb(243 244 246)"),

    GRAY_200("rgb(229 231 235)"),

    GRAY_300("rgb(209 213 219)"),

    GRAY_400("rgb(156 163 175)"),

    GRAY_500("rgb(107 114 128)"),

    GRAY_600("rgb(75 85 99)"),

    GRAY_700("rgb(55 65 81)"),

    GRAY_800("rgb(31 41 55)"),

    GRAY_900("rgb(17 24 39)"),

    ZINC_050("rgb(250 250 250)"),

    ZINC_100("rgb(244 244 245)"),

    ZINC_200("rgb(228 228 231)"),

    ZINC_300("rgb(212 212 216)"),

    ZINC_400("rgb(161 161 170)"),

    ZINC_500("rgb(113 113 122)"),

    ZINC_600("rgb(82 82 91)"),

    ZINC_700("rgb(63 63 70)"),

    ZINC_800("rgb(39 39 42)"),

    ZINC_900("rgb(24 24 27)"),

    NEUTRAL_050("rgb(250 250 250)"),

    NEUTRAL_100("rgb(245 245 245)"),

    NEUTRAL_200("rgb(229 229 229)"),

    NEUTRAL_300("rgb(212 212 212)"),

    NEUTRAL_400("rgb(163 163 163)"),

    NEUTRAL_500("rgb(115 115 115)"),

    NEUTRAL_600("rgb(82 82 82)"),

    NEUTRAL_700("rgb(64 64 64)"),

    NEUTRAL_800("rgb(38 38 38)"),

    NEUTRAL_900("rgb(23 23 23)"),

    STONE_050("rgb(250 250 249)"),

    STONE_100("rgb(245 245 244)"),

    STONE_200("rgb(231 229 228)"),

    STONE_300("rgb(214 211 209)"),

    STONE_400("rgb(168 162 158)"),

    STONE_500("rgb(120 113 108)"),

    STONE_600("rgb(87 83 78)"),

    STONE_700("rgb(68 64 60)"),

    STONE_800("rgb(41 37 36)"),

    STONE_900("rgb(28 25 23)"),

    RED_050("rgb(254 242 242)"),

    RED_100("rgb(254 226 226)"),

    RED_200("rgb(254 202 202)"),

    RED_300("rgb(252 165 165)"),

    RED_400("rgb(248 113 113)"),

    RED_500("rgb(239 68 68)"),

    RED_600("rgb(220 38 38)"),

    RED_700("rgb(185 28 28)"),

    RED_800("rgb(153 27 27)"),

    RED_900("rgb(127 29 29)"),

    ORANGE_050("rgb(255 247 237)"),

    ORANGE_100("rgb(255 237 213)"),

    ORANGE_200("rgb(254 215 170)"),

    ORANGE_300("rgb(253 186 116)"),

    ORANGE_400("rgb(251 146 60)"),

    ORANGE_500("rgb(249 115 22)"),

    ORANGE_600("rgb(234 88 12)"),

    ORANGE_700("rgb(194 65 12)"),

    ORANGE_800("rgb(154 52 18)"),

    ORANGE_900("rgb(124 45 18)"),

    AMBER_050("rgb(255 251 235)"),

    AMBER_100("rgb(254 243 199)"),

    AMBER_200("rgb(253 230 138)"),

    AMBER_300("rgb(252 211 77)"),

    AMBER_400("rgb(251 191 36)"),

    AMBER_500("rgb(245 158 11)"),

    AMBER_600("rgb(217 119 6)"),

    AMBER_700("rgb(180 83 9)"),

    AMBER_800("rgb(146 64 14)"),

    AMBER_900("rgb(120 53 15)"),

    YELLOW_050("rgb(254 252 232)"),

    YELLOW_100("rgb(254 249 195)"),

    YELLOW_200("rgb(254 240 138)"),

    YELLOW_300("rgb(253 224 71)"),

    YELLOW_400("rgb(250 204 21)"),

    YELLOW_500("rgb(234 179 8)"),

    YELLOW_600("rgb(202 138 4)"),

    YELLOW_700("rgb(161 98 7)"),

    YELLOW_800("rgb(133 77 14)"),

    YELLOW_900("rgb(113 63 18)"),

    LIME_050("rgb(247 254 231)"),

    LIME_100("rgb(236 252 203)"),

    LIME_200("rgb(217 249 157)"),

    LIME_300("rgb(190 242 100)"),

    LIME_400("rgb(163 230 53)"),

    LIME_500("rgb(132 204 22)"),

    LIME_600("rgb(101 163 13)"),

    LIME_700("rgb(77 124 15)"),

    LIME_800("rgb(63 98 18)"),

    LIME_900("rgb(54 83 20)"),

    GREEN_050("rgb(240 253 244)"),

    GREEN_100("rgb(220 252 231)"),

    GREEN_200("rgb(187 247 208)"),

    GREEN_300("rgb(134 239 172)"),

    GREEN_400("rgb(74 222 128)"),

    GREEN_500("rgb(34 197 94)"),

    GREEN_600("rgb(22 163 74)"),

    GREEN_700("rgb(21 128 61)"),

    GREEN_800("rgb(22 101 52)"),

    GREEN_900("rgb(20 83 45)"),

    EMERALD_050("rgb(236 253 245)"),

    EMERALD_100("rgb(209 250 229)"),

    EMERALD_200("rgb(167 243 208)"),

    EMERALD_300("rgb(110 231 183)"),

    EMERALD_400("rgb(52 211 153)"),

    EMERALD_500("rgb(16 185 129)"),

    EMERALD_600("rgb(5 150 105)"),

    EMERALD_700("rgb(4 120 87)"),

    EMERALD_800("rgb(6 95 70)"),

    EMERALD_900("rgb(6 78 59)"),

    TEAL_050("rgb(240 253 250)"),

    TEAL_100("rgb(204 251 241)"),

    TEAL_200("rgb(153 246 228)"),

    TEAL_300("rgb(94 234 212)"),

    TEAL_400("rgb(45 212 191)"),

    TEAL_500("rgb(20 184 166)"),

    TEAL_600("rgb(13 148 136)"),

    TEAL_700("rgb(15 118 110)"),

    TEAL_800("rgb(17 94 89)"),

    TEAL_900("rgb(19 78 74)"),

    CYAN_050("rgb(236 254 255)"),

    CYAN_100("rgb(207 250 254)"),

    CYAN_200("rgb(165 243 252)"),

    CYAN_300("rgb(103 232 249)"),

    CYAN_400("rgb(34 211 238)"),

    CYAN_500("rgb(6 182 212)"),

    CYAN_600("rgb(8 145 178)"),

    CYAN_700("rgb(14 116 144)"),

    CYAN_800("rgb(21 94 117)"),

    CYAN_900("rgb(22 78 99)"),

    SKY_050("rgb(240 249 255)"),

    SKY_100("rgb(224 242 254)"),

    SKY_200("rgb(186 230 253)"),

    SKY_300("rgb(125 211 252)"),

    SKY_400("rgb(56 189 248)"),

    SKY_500("rgb(14 165 233)"),

    SKY_600("rgb(2 132 199)"),

    SKY_700("rgb(3 105 161)"),

    SKY_800("rgb(7 89 133)"),

    SKY_900("rgb(12 74 110)"),

    BLUE_050("rgb(239 246 255)"),

    BLUE_100("rgb(219 234 254)"),

    BLUE_200("rgb(191 219 254)"),

    BLUE_300("rgb(147 197 253)"),

    BLUE_400("rgb(96 165 250)"),

    BLUE_500("rgb(59 130 246)"),

    BLUE_600("rgb(37 99 235)"),

    BLUE_700("rgb(29 78 216)"),

    BLUE_800("rgb(30 64 175)"),

    BLUE_900("rgb(30 58 138)"),

    INDIGO_050("rgb(238 242 255)"),

    INDIGO_100("rgb(224 231 255)"),

    INDIGO_200("rgb(199 210 254)"),

    INDIGO_300("rgb(165 180 252)"),

    INDIGO_400("rgb(129 140 248)"),

    INDIGO_500("rgb(99 102 241)"),

    INDIGO_600("rgb(79 70 229)"),

    INDIGO_700("rgb(67 56 202)"),

    INDIGO_800("rgb(55 48 163)"),

    INDIGO_900("rgb(49 46 129)"),

    VIOLET_050("rgb(245 243 255)"),

    VIOLET_100("rgb(237 233 254)"),

    VIOLET_200("rgb(221 214 254)"),

    VIOLET_300("rgb(196 181 253)"),

    VIOLET_400("rgb(167 139 250)"),

    VIOLET_500("rgb(139 92 246)"),

    VIOLET_600("rgb(124 58 237)"),

    VIOLET_700("rgb(109 40 217)"),

    VIOLET_800("rgb(91 33 182)"),

    VIOLET_900("rgb(76 29 149)"),

    PURPLE_050("rgb(250 245 255)"),

    PURPLE_100("rgb(243 232 255)"),

    PURPLE_200("rgb(233 213 255)"),

    PURPLE_300("rgb(216 180 254)"),

    PURPLE_400("rgb(192 132 252)"),

    PURPLE_500("rgb(168 85 247)"),

    PURPLE_600("rgb(147 51 234)"),

    PURPLE_700("rgb(126 34 206)"),

    PURPLE_800("rgb(107 33 168)"),

    PURPLE_900("rgb(88 28 135)"),

    FUCHSIA_050("rgb(253 244 255)"),

    FUCHSIA_100("rgb(250 232 255)"),

    FUCHSIA_200("rgb(245 208 254)"),

    FUCHSIA_300("rgb(240 171 252)"),

    FUCHSIA_400("rgb(232 121 249)"),

    FUCHSIA_500("rgb(217 70 239)"),

    FUCHSIA_600("rgb(192 38 211)"),

    FUCHSIA_700("rgb(162 28 175)"),

    FUCHSIA_800("rgb(134 25 143)"),

    FUCHSIA_900("rgb(112 26 117)"),

    PINK_050("rgb(253 242 248)"),

    PINK_100("rgb(252 231 243)"),

    PINK_200("rgb(251 207 232)"),

    PINK_300("rgb(249 168 212)"),

    PINK_400("rgb(244 114 182)"),

    PINK_500("rgb(236 72 153)"),

    PINK_600("rgb(219 39 119)"),

    PINK_700("rgb(190 24 93)"),

    PINK_800("rgb(157 23 77)"),

    PINK_900("rgb(131 24 67)"),

    ROSE_050("rgb(255 241 242)"),

    ROSE_100("rgb(255 228 230)"),

    ROSE_200("rgb(254 205 211)"),

    ROSE_300("rgb(253 164 175)"),

    ROSE_400("rgb(251 113 133)"),

    ROSE_500("rgb(244 63 94)"),

    ROSE_600("rgb(225 29 72)"),

    ROSE_700("rgb(190 18 60)"),

    ROSE_800("rgb(159 18 57)"),

    ROSE_900("rgb(136 19 55)");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private BorderLeftColor(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { border-left-color: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code border-right-color} and {@code border-left-color} CSS properties.
   */
  public enum BorderXColor implements StyleClass {

    INHERIT("inherit"),

    CURRENT("currentColor"),

    TRANSPARENT("transparent"),

    BLACK("rgb(0 0 0)"),

    WHITE("rgb(255 255 255)"),

    SLATE_050("rgb(248 250 252)"),

    SLATE_100("rgb(241 245 249)"),

    SLATE_200("rgb(226 232 240)"),

    SLATE_300("rgb(203 213 225)"),

    SLATE_400("rgb(148 163 184)"),

    SLATE_500("rgb(100 116 139)"),

    SLATE_600("rgb(71 85 105)"),

    SLATE_700("rgb(51 65 85)"),

    SLATE_800("rgb(30 41 59)"),

    SLATE_900("rgb(15 23 42)"),

    GRAY_050("rgb(249 250 251)"),

    GRAY_100("rgb(243 244 246)"),

    GRAY_200("rgb(229 231 235)"),

    GRAY_300("rgb(209 213 219)"),

    GRAY_400("rgb(156 163 175)"),

    GRAY_500("rgb(107 114 128)"),

    GRAY_600("rgb(75 85 99)"),

    GRAY_700("rgb(55 65 81)"),

    GRAY_800("rgb(31 41 55)"),

    GRAY_900("rgb(17 24 39)"),

    ZINC_050("rgb(250 250 250)"),

    ZINC_100("rgb(244 244 245)"),

    ZINC_200("rgb(228 228 231)"),

    ZINC_300("rgb(212 212 216)"),

    ZINC_400("rgb(161 161 170)"),

    ZINC_500("rgb(113 113 122)"),

    ZINC_600("rgb(82 82 91)"),

    ZINC_700("rgb(63 63 70)"),

    ZINC_800("rgb(39 39 42)"),

    ZINC_900("rgb(24 24 27)"),

    NEUTRAL_050("rgb(250 250 250)"),

    NEUTRAL_100("rgb(245 245 245)"),

    NEUTRAL_200("rgb(229 229 229)"),

    NEUTRAL_300("rgb(212 212 212)"),

    NEUTRAL_400("rgb(163 163 163)"),

    NEUTRAL_500("rgb(115 115 115)"),

    NEUTRAL_600("rgb(82 82 82)"),

    NEUTRAL_700("rgb(64 64 64)"),

    NEUTRAL_800("rgb(38 38 38)"),

    NEUTRAL_900("rgb(23 23 23)"),

    STONE_050("rgb(250 250 249)"),

    STONE_100("rgb(245 245 244)"),

    STONE_200("rgb(231 229 228)"),

    STONE_300("rgb(214 211 209)"),

    STONE_400("rgb(168 162 158)"),

    STONE_500("rgb(120 113 108)"),

    STONE_600("rgb(87 83 78)"),

    STONE_700("rgb(68 64 60)"),

    STONE_800("rgb(41 37 36)"),

    STONE_900("rgb(28 25 23)"),

    RED_050("rgb(254 242 242)"),

    RED_100("rgb(254 226 226)"),

    RED_200("rgb(254 202 202)"),

    RED_300("rgb(252 165 165)"),

    RED_400("rgb(248 113 113)"),

    RED_500("rgb(239 68 68)"),

    RED_600("rgb(220 38 38)"),

    RED_700("rgb(185 28 28)"),

    RED_800("rgb(153 27 27)"),

    RED_900("rgb(127 29 29)"),

    ORANGE_050("rgb(255 247 237)"),

    ORANGE_100("rgb(255 237 213)"),

    ORANGE_200("rgb(254 215 170)"),

    ORANGE_300("rgb(253 186 116)"),

    ORANGE_400("rgb(251 146 60)"),

    ORANGE_500("rgb(249 115 22)"),

    ORANGE_600("rgb(234 88 12)"),

    ORANGE_700("rgb(194 65 12)"),

    ORANGE_800("rgb(154 52 18)"),

    ORANGE_900("rgb(124 45 18)"),

    AMBER_050("rgb(255 251 235)"),

    AMBER_100("rgb(254 243 199)"),

    AMBER_200("rgb(253 230 138)"),

    AMBER_300("rgb(252 211 77)"),

    AMBER_400("rgb(251 191 36)"),

    AMBER_500("rgb(245 158 11)"),

    AMBER_600("rgb(217 119 6)"),

    AMBER_700("rgb(180 83 9)"),

    AMBER_800("rgb(146 64 14)"),

    AMBER_900("rgb(120 53 15)"),

    YELLOW_050("rgb(254 252 232)"),

    YELLOW_100("rgb(254 249 195)"),

    YELLOW_200("rgb(254 240 138)"),

    YELLOW_300("rgb(253 224 71)"),

    YELLOW_400("rgb(250 204 21)"),

    YELLOW_500("rgb(234 179 8)"),

    YELLOW_600("rgb(202 138 4)"),

    YELLOW_700("rgb(161 98 7)"),

    YELLOW_800("rgb(133 77 14)"),

    YELLOW_900("rgb(113 63 18)"),

    LIME_050("rgb(247 254 231)"),

    LIME_100("rgb(236 252 203)"),

    LIME_200("rgb(217 249 157)"),

    LIME_300("rgb(190 242 100)"),

    LIME_400("rgb(163 230 53)"),

    LIME_500("rgb(132 204 22)"),

    LIME_600("rgb(101 163 13)"),

    LIME_700("rgb(77 124 15)"),

    LIME_800("rgb(63 98 18)"),

    LIME_900("rgb(54 83 20)"),

    GREEN_050("rgb(240 253 244)"),

    GREEN_100("rgb(220 252 231)"),

    GREEN_200("rgb(187 247 208)"),

    GREEN_300("rgb(134 239 172)"),

    GREEN_400("rgb(74 222 128)"),

    GREEN_500("rgb(34 197 94)"),

    GREEN_600("rgb(22 163 74)"),

    GREEN_700("rgb(21 128 61)"),

    GREEN_800("rgb(22 101 52)"),

    GREEN_900("rgb(20 83 45)"),

    EMERALD_050("rgb(236 253 245)"),

    EMERALD_100("rgb(209 250 229)"),

    EMERALD_200("rgb(167 243 208)"),

    EMERALD_300("rgb(110 231 183)"),

    EMERALD_400("rgb(52 211 153)"),

    EMERALD_500("rgb(16 185 129)"),

    EMERALD_600("rgb(5 150 105)"),

    EMERALD_700("rgb(4 120 87)"),

    EMERALD_800("rgb(6 95 70)"),

    EMERALD_900("rgb(6 78 59)"),

    TEAL_050("rgb(240 253 250)"),

    TEAL_100("rgb(204 251 241)"),

    TEAL_200("rgb(153 246 228)"),

    TEAL_300("rgb(94 234 212)"),

    TEAL_400("rgb(45 212 191)"),

    TEAL_500("rgb(20 184 166)"),

    TEAL_600("rgb(13 148 136)"),

    TEAL_700("rgb(15 118 110)"),

    TEAL_800("rgb(17 94 89)"),

    TEAL_900("rgb(19 78 74)"),

    CYAN_050("rgb(236 254 255)"),

    CYAN_100("rgb(207 250 254)"),

    CYAN_200("rgb(165 243 252)"),

    CYAN_300("rgb(103 232 249)"),

    CYAN_400("rgb(34 211 238)"),

    CYAN_500("rgb(6 182 212)"),

    CYAN_600("rgb(8 145 178)"),

    CYAN_700("rgb(14 116 144)"),

    CYAN_800("rgb(21 94 117)"),

    CYAN_900("rgb(22 78 99)"),

    SKY_050("rgb(240 249 255)"),

    SKY_100("rgb(224 242 254)"),

    SKY_200("rgb(186 230 253)"),

    SKY_300("rgb(125 211 252)"),

    SKY_400("rgb(56 189 248)"),

    SKY_500("rgb(14 165 233)"),

    SKY_600("rgb(2 132 199)"),

    SKY_700("rgb(3 105 161)"),

    SKY_800("rgb(7 89 133)"),

    SKY_900("rgb(12 74 110)"),

    BLUE_050("rgb(239 246 255)"),

    BLUE_100("rgb(219 234 254)"),

    BLUE_200("rgb(191 219 254)"),

    BLUE_300("rgb(147 197 253)"),

    BLUE_400("rgb(96 165 250)"),

    BLUE_500("rgb(59 130 246)"),

    BLUE_600("rgb(37 99 235)"),

    BLUE_700("rgb(29 78 216)"),

    BLUE_800("rgb(30 64 175)"),

    BLUE_900("rgb(30 58 138)"),

    INDIGO_050("rgb(238 242 255)"),

    INDIGO_100("rgb(224 231 255)"),

    INDIGO_200("rgb(199 210 254)"),

    INDIGO_300("rgb(165 180 252)"),

    INDIGO_400("rgb(129 140 248)"),

    INDIGO_500("rgb(99 102 241)"),

    INDIGO_600("rgb(79 70 229)"),

    INDIGO_700("rgb(67 56 202)"),

    INDIGO_800("rgb(55 48 163)"),

    INDIGO_900("rgb(49 46 129)"),

    VIOLET_050("rgb(245 243 255)"),

    VIOLET_100("rgb(237 233 254)"),

    VIOLET_200("rgb(221 214 254)"),

    VIOLET_300("rgb(196 181 253)"),

    VIOLET_400("rgb(167 139 250)"),

    VIOLET_500("rgb(139 92 246)"),

    VIOLET_600("rgb(124 58 237)"),

    VIOLET_700("rgb(109 40 217)"),

    VIOLET_800("rgb(91 33 182)"),

    VIOLET_900("rgb(76 29 149)"),

    PURPLE_050("rgb(250 245 255)"),

    PURPLE_100("rgb(243 232 255)"),

    PURPLE_200("rgb(233 213 255)"),

    PURPLE_300("rgb(216 180 254)"),

    PURPLE_400("rgb(192 132 252)"),

    PURPLE_500("rgb(168 85 247)"),

    PURPLE_600("rgb(147 51 234)"),

    PURPLE_700("rgb(126 34 206)"),

    PURPLE_800("rgb(107 33 168)"),

    PURPLE_900("rgb(88 28 135)"),

    FUCHSIA_050("rgb(253 244 255)"),

    FUCHSIA_100("rgb(250 232 255)"),

    FUCHSIA_200("rgb(245 208 254)"),

    FUCHSIA_300("rgb(240 171 252)"),

    FUCHSIA_400("rgb(232 121 249)"),

    FUCHSIA_500("rgb(217 70 239)"),

    FUCHSIA_600("rgb(192 38 211)"),

    FUCHSIA_700("rgb(162 28 175)"),

    FUCHSIA_800("rgb(134 25 143)"),

    FUCHSIA_900("rgb(112 26 117)"),

    PINK_050("rgb(253 242 248)"),

    PINK_100("rgb(252 231 243)"),

    PINK_200("rgb(251 207 232)"),

    PINK_300("rgb(249 168 212)"),

    PINK_400("rgb(244 114 182)"),

    PINK_500("rgb(236 72 153)"),

    PINK_600("rgb(219 39 119)"),

    PINK_700("rgb(190 24 93)"),

    PINK_800("rgb(157 23 77)"),

    PINK_900("rgb(131 24 67)"),

    ROSE_050("rgb(255 241 242)"),

    ROSE_100("rgb(255 228 230)"),

    ROSE_200("rgb(254 205 211)"),

    ROSE_300("rgb(253 164 175)"),

    ROSE_400("rgb(251 113 133)"),

    ROSE_500("rgb(244 63 94)"),

    ROSE_600("rgb(225 29 72)"),

    ROSE_700("rgb(190 18 60)"),

    ROSE_800("rgb(159 18 57)"),

    ROSE_900("rgb(136 19 55)");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private BorderXColor(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { border-right-color: " + value + "; border-left-color: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code border-top-color} and {@code border-bottom-color} CSS properties.
   */
  public enum BorderYColor implements StyleClass {

    INHERIT("inherit"),

    CURRENT("currentColor"),

    TRANSPARENT("transparent"),

    BLACK("rgb(0 0 0)"),

    WHITE("rgb(255 255 255)"),

    SLATE_050("rgb(248 250 252)"),

    SLATE_100("rgb(241 245 249)"),

    SLATE_200("rgb(226 232 240)"),

    SLATE_300("rgb(203 213 225)"),

    SLATE_400("rgb(148 163 184)"),

    SLATE_500("rgb(100 116 139)"),

    SLATE_600("rgb(71 85 105)"),

    SLATE_700("rgb(51 65 85)"),

    SLATE_800("rgb(30 41 59)"),

    SLATE_900("rgb(15 23 42)"),

    GRAY_050("rgb(249 250 251)"),

    GRAY_100("rgb(243 244 246)"),

    GRAY_200("rgb(229 231 235)"),

    GRAY_300("rgb(209 213 219)"),

    GRAY_400("rgb(156 163 175)"),

    GRAY_500("rgb(107 114 128)"),

    GRAY_600("rgb(75 85 99)"),

    GRAY_700("rgb(55 65 81)"),

    GRAY_800("rgb(31 41 55)"),

    GRAY_900("rgb(17 24 39)"),

    ZINC_050("rgb(250 250 250)"),

    ZINC_100("rgb(244 244 245)"),

    ZINC_200("rgb(228 228 231)"),

    ZINC_300("rgb(212 212 216)"),

    ZINC_400("rgb(161 161 170)"),

    ZINC_500("rgb(113 113 122)"),

    ZINC_600("rgb(82 82 91)"),

    ZINC_700("rgb(63 63 70)"),

    ZINC_800("rgb(39 39 42)"),

    ZINC_900("rgb(24 24 27)"),

    NEUTRAL_050("rgb(250 250 250)"),

    NEUTRAL_100("rgb(245 245 245)"),

    NEUTRAL_200("rgb(229 229 229)"),

    NEUTRAL_300("rgb(212 212 212)"),

    NEUTRAL_400("rgb(163 163 163)"),

    NEUTRAL_500("rgb(115 115 115)"),

    NEUTRAL_600("rgb(82 82 82)"),

    NEUTRAL_700("rgb(64 64 64)"),

    NEUTRAL_800("rgb(38 38 38)"),

    NEUTRAL_900("rgb(23 23 23)"),

    STONE_050("rgb(250 250 249)"),

    STONE_100("rgb(245 245 244)"),

    STONE_200("rgb(231 229 228)"),

    STONE_300("rgb(214 211 209)"),

    STONE_400("rgb(168 162 158)"),

    STONE_500("rgb(120 113 108)"),

    STONE_600("rgb(87 83 78)"),

    STONE_700("rgb(68 64 60)"),

    STONE_800("rgb(41 37 36)"),

    STONE_900("rgb(28 25 23)"),

    RED_050("rgb(254 242 242)"),

    RED_100("rgb(254 226 226)"),

    RED_200("rgb(254 202 202)"),

    RED_300("rgb(252 165 165)"),

    RED_400("rgb(248 113 113)"),

    RED_500("rgb(239 68 68)"),

    RED_600("rgb(220 38 38)"),

    RED_700("rgb(185 28 28)"),

    RED_800("rgb(153 27 27)"),

    RED_900("rgb(127 29 29)"),

    ORANGE_050("rgb(255 247 237)"),

    ORANGE_100("rgb(255 237 213)"),

    ORANGE_200("rgb(254 215 170)"),

    ORANGE_300("rgb(253 186 116)"),

    ORANGE_400("rgb(251 146 60)"),

    ORANGE_500("rgb(249 115 22)"),

    ORANGE_600("rgb(234 88 12)"),

    ORANGE_700("rgb(194 65 12)"),

    ORANGE_800("rgb(154 52 18)"),

    ORANGE_900("rgb(124 45 18)"),

    AMBER_050("rgb(255 251 235)"),

    AMBER_100("rgb(254 243 199)"),

    AMBER_200("rgb(253 230 138)"),

    AMBER_300("rgb(252 211 77)"),

    AMBER_400("rgb(251 191 36)"),

    AMBER_500("rgb(245 158 11)"),

    AMBER_600("rgb(217 119 6)"),

    AMBER_700("rgb(180 83 9)"),

    AMBER_800("rgb(146 64 14)"),

    AMBER_900("rgb(120 53 15)"),

    YELLOW_050("rgb(254 252 232)"),

    YELLOW_100("rgb(254 249 195)"),

    YELLOW_200("rgb(254 240 138)"),

    YELLOW_300("rgb(253 224 71)"),

    YELLOW_400("rgb(250 204 21)"),

    YELLOW_500("rgb(234 179 8)"),

    YELLOW_600("rgb(202 138 4)"),

    YELLOW_700("rgb(161 98 7)"),

    YELLOW_800("rgb(133 77 14)"),

    YELLOW_900("rgb(113 63 18)"),

    LIME_050("rgb(247 254 231)"),

    LIME_100("rgb(236 252 203)"),

    LIME_200("rgb(217 249 157)"),

    LIME_300("rgb(190 242 100)"),

    LIME_400("rgb(163 230 53)"),

    LIME_500("rgb(132 204 22)"),

    LIME_600("rgb(101 163 13)"),

    LIME_700("rgb(77 124 15)"),

    LIME_800("rgb(63 98 18)"),

    LIME_900("rgb(54 83 20)"),

    GREEN_050("rgb(240 253 244)"),

    GREEN_100("rgb(220 252 231)"),

    GREEN_200("rgb(187 247 208)"),

    GREEN_300("rgb(134 239 172)"),

    GREEN_400("rgb(74 222 128)"),

    GREEN_500("rgb(34 197 94)"),

    GREEN_600("rgb(22 163 74)"),

    GREEN_700("rgb(21 128 61)"),

    GREEN_800("rgb(22 101 52)"),

    GREEN_900("rgb(20 83 45)"),

    EMERALD_050("rgb(236 253 245)"),

    EMERALD_100("rgb(209 250 229)"),

    EMERALD_200("rgb(167 243 208)"),

    EMERALD_300("rgb(110 231 183)"),

    EMERALD_400("rgb(52 211 153)"),

    EMERALD_500("rgb(16 185 129)"),

    EMERALD_600("rgb(5 150 105)"),

    EMERALD_700("rgb(4 120 87)"),

    EMERALD_800("rgb(6 95 70)"),

    EMERALD_900("rgb(6 78 59)"),

    TEAL_050("rgb(240 253 250)"),

    TEAL_100("rgb(204 251 241)"),

    TEAL_200("rgb(153 246 228)"),

    TEAL_300("rgb(94 234 212)"),

    TEAL_400("rgb(45 212 191)"),

    TEAL_500("rgb(20 184 166)"),

    TEAL_600("rgb(13 148 136)"),

    TEAL_700("rgb(15 118 110)"),

    TEAL_800("rgb(17 94 89)"),

    TEAL_900("rgb(19 78 74)"),

    CYAN_050("rgb(236 254 255)"),

    CYAN_100("rgb(207 250 254)"),

    CYAN_200("rgb(165 243 252)"),

    CYAN_300("rgb(103 232 249)"),

    CYAN_400("rgb(34 211 238)"),

    CYAN_500("rgb(6 182 212)"),

    CYAN_600("rgb(8 145 178)"),

    CYAN_700("rgb(14 116 144)"),

    CYAN_800("rgb(21 94 117)"),

    CYAN_900("rgb(22 78 99)"),

    SKY_050("rgb(240 249 255)"),

    SKY_100("rgb(224 242 254)"),

    SKY_200("rgb(186 230 253)"),

    SKY_300("rgb(125 211 252)"),

    SKY_400("rgb(56 189 248)"),

    SKY_500("rgb(14 165 233)"),

    SKY_600("rgb(2 132 199)"),

    SKY_700("rgb(3 105 161)"),

    SKY_800("rgb(7 89 133)"),

    SKY_900("rgb(12 74 110)"),

    BLUE_050("rgb(239 246 255)"),

    BLUE_100("rgb(219 234 254)"),

    BLUE_200("rgb(191 219 254)"),

    BLUE_300("rgb(147 197 253)"),

    BLUE_400("rgb(96 165 250)"),

    BLUE_500("rgb(59 130 246)"),

    BLUE_600("rgb(37 99 235)"),

    BLUE_700("rgb(29 78 216)"),

    BLUE_800("rgb(30 64 175)"),

    BLUE_900("rgb(30 58 138)"),

    INDIGO_050("rgb(238 242 255)"),

    INDIGO_100("rgb(224 231 255)"),

    INDIGO_200("rgb(199 210 254)"),

    INDIGO_300("rgb(165 180 252)"),

    INDIGO_400("rgb(129 140 248)"),

    INDIGO_500("rgb(99 102 241)"),

    INDIGO_600("rgb(79 70 229)"),

    INDIGO_700("rgb(67 56 202)"),

    INDIGO_800("rgb(55 48 163)"),

    INDIGO_900("rgb(49 46 129)"),

    VIOLET_050("rgb(245 243 255)"),

    VIOLET_100("rgb(237 233 254)"),

    VIOLET_200("rgb(221 214 254)"),

    VIOLET_300("rgb(196 181 253)"),

    VIOLET_400("rgb(167 139 250)"),

    VIOLET_500("rgb(139 92 246)"),

    VIOLET_600("rgb(124 58 237)"),

    VIOLET_700("rgb(109 40 217)"),

    VIOLET_800("rgb(91 33 182)"),

    VIOLET_900("rgb(76 29 149)"),

    PURPLE_050("rgb(250 245 255)"),

    PURPLE_100("rgb(243 232 255)"),

    PURPLE_200("rgb(233 213 255)"),

    PURPLE_300("rgb(216 180 254)"),

    PURPLE_400("rgb(192 132 252)"),

    PURPLE_500("rgb(168 85 247)"),

    PURPLE_600("rgb(147 51 234)"),

    PURPLE_700("rgb(126 34 206)"),

    PURPLE_800("rgb(107 33 168)"),

    PURPLE_900("rgb(88 28 135)"),

    FUCHSIA_050("rgb(253 244 255)"),

    FUCHSIA_100("rgb(250 232 255)"),

    FUCHSIA_200("rgb(245 208 254)"),

    FUCHSIA_300("rgb(240 171 252)"),

    FUCHSIA_400("rgb(232 121 249)"),

    FUCHSIA_500("rgb(217 70 239)"),

    FUCHSIA_600("rgb(192 38 211)"),

    FUCHSIA_700("rgb(162 28 175)"),

    FUCHSIA_800("rgb(134 25 143)"),

    FUCHSIA_900("rgb(112 26 117)"),

    PINK_050("rgb(253 242 248)"),

    PINK_100("rgb(252 231 243)"),

    PINK_200("rgb(251 207 232)"),

    PINK_300("rgb(249 168 212)"),

    PINK_400("rgb(244 114 182)"),

    PINK_500("rgb(236 72 153)"),

    PINK_600("rgb(219 39 119)"),

    PINK_700("rgb(190 24 93)"),

    PINK_800("rgb(157 23 77)"),

    PINK_900("rgb(131 24 67)"),

    ROSE_050("rgb(255 241 242)"),

    ROSE_100("rgb(255 228 230)"),

    ROSE_200("rgb(254 205 211)"),

    ROSE_300("rgb(253 164 175)"),

    ROSE_400("rgb(251 113 133)"),

    ROSE_500("rgb(244 63 94)"),

    ROSE_600("rgb(225 29 72)"),

    ROSE_700("rgb(190 18 60)"),

    ROSE_800("rgb(159 18 57)"),

    ROSE_900("rgb(136 19 55)");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private BorderYColor(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { border-top-color: " + value + "; border-bottom-color: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code border-radius} CSS property.
   */
  public enum BorderRadius implements StyleClass {

    PX0("0px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX12("0.75rem"),

    PX16("1rem"),

    PX24("1.5rem"),

    FULL("9999px");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private BorderRadius(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { border-radius: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code border-top-left-radius} and {@code border-top-right-radius} CSS properties.
   */
  public enum BorderTopRadius implements StyleClass {

    PX0("0px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX12("0.75rem"),

    PX16("1rem"),

    PX24("1.5rem"),

    FULL("9999px");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private BorderTopRadius(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { border-top-left-radius: " + value + "; border-top-right-radius: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code border-top-right-radius} and {@code border-bottom-right-radius} CSS properties.
   */
  public enum BorderRightRadius implements StyleClass {

    PX0("0px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX12("0.75rem"),

    PX16("1rem"),

    PX24("1.5rem"),

    FULL("9999px");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private BorderRightRadius(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { border-top-right-radius: " + value + "; border-bottom-right-radius: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code border-bottom-left-radius} and {@code border-bottom-right-radius} CSS properties.
   */
  public enum BorderBottomRadius implements StyleClass {

    PX0("0px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX12("0.75rem"),

    PX16("1rem"),

    PX24("1.5rem"),

    FULL("9999px");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private BorderBottomRadius(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { border-bottom-left-radius: " + value + "; border-bottom-right-radius: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code border-top-left-radius} and {@code border-bottom-left-radius} CSS properties.
   */
  public enum BorderLeftRadius implements StyleClass {

    PX0("0px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX12("0.75rem"),

    PX16("1rem"),

    PX24("1.5rem"),

    FULL("9999px");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private BorderLeftRadius(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { border-top-left-radius: " + value + "; border-bottom-left-radius: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code border-style} CSS property.
   */
  public enum BorderStyle implements StyleClass {

    SOLID("solid"),

    DASHED("dashed"),

    DOTTED("dotted"),

    DOUBLE("double"),

    HIDDEN("hidden"),

    NONE("none");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private BorderStyle(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { border-style: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code border-width} CSS property.
   */
  public enum BorderWidth implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("2px"),

    PX4("4px"),

    PX8("8px");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private BorderWidth(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { border-width: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code border-top-width} CSS property.
   */
  public enum BorderTopWidth implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("2px"),

    PX4("4px"),

    PX8("8px");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private BorderTopWidth(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { border-top-width: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code border-right-width} CSS property.
   */
  public enum BorderRightWidth implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("2px"),

    PX4("4px"),

    PX8("8px");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private BorderRightWidth(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { border-right-width: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code border-bottom-width} CSS property.
   */
  public enum BorderBottomWidth implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("2px"),

    PX4("4px"),

    PX8("8px");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private BorderBottomWidth(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { border-bottom-width: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code border-left-width} CSS property.
   */
  public enum BorderLeftWidth implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("2px"),

    PX4("4px"),

    PX8("8px");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private BorderLeftWidth(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { border-left-width: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code border-right-width} and {@code border-left-width} CSS properties.
   */
  public enum BorderXWidth implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("2px"),

    PX4("4px"),

    PX8("8px");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private BorderXWidth(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { border-right-width: " + value + "; border-left-width: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code border-top-width} and {@code border-bottom-width} CSS properties.
   */
  public enum BorderYWidth implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("2px"),

    PX4("4px"),

    PX8("8px");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private BorderYWidth(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { border-top-width: " + value + "; border-bottom-width: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code color} CSS property.
   */
  public enum TextColor implements StyleClass {

    INHERIT("inherit"),

    CURRENT("currentColor"),

    TRANSPARENT("transparent"),

    BLACK("rgb(0 0 0)"),

    WHITE("rgb(255 255 255)"),

    SLATE_050("rgb(248 250 252)"),

    SLATE_100("rgb(241 245 249)"),

    SLATE_200("rgb(226 232 240)"),

    SLATE_300("rgb(203 213 225)"),

    SLATE_400("rgb(148 163 184)"),

    SLATE_500("rgb(100 116 139)"),

    SLATE_600("rgb(71 85 105)"),

    SLATE_700("rgb(51 65 85)"),

    SLATE_800("rgb(30 41 59)"),

    SLATE_900("rgb(15 23 42)"),

    GRAY_050("rgb(249 250 251)"),

    GRAY_100("rgb(243 244 246)"),

    GRAY_200("rgb(229 231 235)"),

    GRAY_300("rgb(209 213 219)"),

    GRAY_400("rgb(156 163 175)"),

    GRAY_500("rgb(107 114 128)"),

    GRAY_600("rgb(75 85 99)"),

    GRAY_700("rgb(55 65 81)"),

    GRAY_800("rgb(31 41 55)"),

    GRAY_900("rgb(17 24 39)"),

    ZINC_050("rgb(250 250 250)"),

    ZINC_100("rgb(244 244 245)"),

    ZINC_200("rgb(228 228 231)"),

    ZINC_300("rgb(212 212 216)"),

    ZINC_400("rgb(161 161 170)"),

    ZINC_500("rgb(113 113 122)"),

    ZINC_600("rgb(82 82 91)"),

    ZINC_700("rgb(63 63 70)"),

    ZINC_800("rgb(39 39 42)"),

    ZINC_900("rgb(24 24 27)"),

    NEUTRAL_050("rgb(250 250 250)"),

    NEUTRAL_100("rgb(245 245 245)"),

    NEUTRAL_200("rgb(229 229 229)"),

    NEUTRAL_300("rgb(212 212 212)"),

    NEUTRAL_400("rgb(163 163 163)"),

    NEUTRAL_500("rgb(115 115 115)"),

    NEUTRAL_600("rgb(82 82 82)"),

    NEUTRAL_700("rgb(64 64 64)"),

    NEUTRAL_800("rgb(38 38 38)"),

    NEUTRAL_900("rgb(23 23 23)"),

    STONE_050("rgb(250 250 249)"),

    STONE_100("rgb(245 245 244)"),

    STONE_200("rgb(231 229 228)"),

    STONE_300("rgb(214 211 209)"),

    STONE_400("rgb(168 162 158)"),

    STONE_500("rgb(120 113 108)"),

    STONE_600("rgb(87 83 78)"),

    STONE_700("rgb(68 64 60)"),

    STONE_800("rgb(41 37 36)"),

    STONE_900("rgb(28 25 23)"),

    RED_050("rgb(254 242 242)"),

    RED_100("rgb(254 226 226)"),

    RED_200("rgb(254 202 202)"),

    RED_300("rgb(252 165 165)"),

    RED_400("rgb(248 113 113)"),

    RED_500("rgb(239 68 68)"),

    RED_600("rgb(220 38 38)"),

    RED_700("rgb(185 28 28)"),

    RED_800("rgb(153 27 27)"),

    RED_900("rgb(127 29 29)"),

    ORANGE_050("rgb(255 247 237)"),

    ORANGE_100("rgb(255 237 213)"),

    ORANGE_200("rgb(254 215 170)"),

    ORANGE_300("rgb(253 186 116)"),

    ORANGE_400("rgb(251 146 60)"),

    ORANGE_500("rgb(249 115 22)"),

    ORANGE_600("rgb(234 88 12)"),

    ORANGE_700("rgb(194 65 12)"),

    ORANGE_800("rgb(154 52 18)"),

    ORANGE_900("rgb(124 45 18)"),

    AMBER_050("rgb(255 251 235)"),

    AMBER_100("rgb(254 243 199)"),

    AMBER_200("rgb(253 230 138)"),

    AMBER_300("rgb(252 211 77)"),

    AMBER_400("rgb(251 191 36)"),

    AMBER_500("rgb(245 158 11)"),

    AMBER_600("rgb(217 119 6)"),

    AMBER_700("rgb(180 83 9)"),

    AMBER_800("rgb(146 64 14)"),

    AMBER_900("rgb(120 53 15)"),

    YELLOW_050("rgb(254 252 232)"),

    YELLOW_100("rgb(254 249 195)"),

    YELLOW_200("rgb(254 240 138)"),

    YELLOW_300("rgb(253 224 71)"),

    YELLOW_400("rgb(250 204 21)"),

    YELLOW_500("rgb(234 179 8)"),

    YELLOW_600("rgb(202 138 4)"),

    YELLOW_700("rgb(161 98 7)"),

    YELLOW_800("rgb(133 77 14)"),

    YELLOW_900("rgb(113 63 18)"),

    LIME_050("rgb(247 254 231)"),

    LIME_100("rgb(236 252 203)"),

    LIME_200("rgb(217 249 157)"),

    LIME_300("rgb(190 242 100)"),

    LIME_400("rgb(163 230 53)"),

    LIME_500("rgb(132 204 22)"),

    LIME_600("rgb(101 163 13)"),

    LIME_700("rgb(77 124 15)"),

    LIME_800("rgb(63 98 18)"),

    LIME_900("rgb(54 83 20)"),

    GREEN_050("rgb(240 253 244)"),

    GREEN_100("rgb(220 252 231)"),

    GREEN_200("rgb(187 247 208)"),

    GREEN_300("rgb(134 239 172)"),

    GREEN_400("rgb(74 222 128)"),

    GREEN_500("rgb(34 197 94)"),

    GREEN_600("rgb(22 163 74)"),

    GREEN_700("rgb(21 128 61)"),

    GREEN_800("rgb(22 101 52)"),

    GREEN_900("rgb(20 83 45)"),

    EMERALD_050("rgb(236 253 245)"),

    EMERALD_100("rgb(209 250 229)"),

    EMERALD_200("rgb(167 243 208)"),

    EMERALD_300("rgb(110 231 183)"),

    EMERALD_400("rgb(52 211 153)"),

    EMERALD_500("rgb(16 185 129)"),

    EMERALD_600("rgb(5 150 105)"),

    EMERALD_700("rgb(4 120 87)"),

    EMERALD_800("rgb(6 95 70)"),

    EMERALD_900("rgb(6 78 59)"),

    TEAL_050("rgb(240 253 250)"),

    TEAL_100("rgb(204 251 241)"),

    TEAL_200("rgb(153 246 228)"),

    TEAL_300("rgb(94 234 212)"),

    TEAL_400("rgb(45 212 191)"),

    TEAL_500("rgb(20 184 166)"),

    TEAL_600("rgb(13 148 136)"),

    TEAL_700("rgb(15 118 110)"),

    TEAL_800("rgb(17 94 89)"),

    TEAL_900("rgb(19 78 74)"),

    CYAN_050("rgb(236 254 255)"),

    CYAN_100("rgb(207 250 254)"),

    CYAN_200("rgb(165 243 252)"),

    CYAN_300("rgb(103 232 249)"),

    CYAN_400("rgb(34 211 238)"),

    CYAN_500("rgb(6 182 212)"),

    CYAN_600("rgb(8 145 178)"),

    CYAN_700("rgb(14 116 144)"),

    CYAN_800("rgb(21 94 117)"),

    CYAN_900("rgb(22 78 99)"),

    SKY_050("rgb(240 249 255)"),

    SKY_100("rgb(224 242 254)"),

    SKY_200("rgb(186 230 253)"),

    SKY_300("rgb(125 211 252)"),

    SKY_400("rgb(56 189 248)"),

    SKY_500("rgb(14 165 233)"),

    SKY_600("rgb(2 132 199)"),

    SKY_700("rgb(3 105 161)"),

    SKY_800("rgb(7 89 133)"),

    SKY_900("rgb(12 74 110)"),

    BLUE_050("rgb(239 246 255)"),

    BLUE_100("rgb(219 234 254)"),

    BLUE_200("rgb(191 219 254)"),

    BLUE_300("rgb(147 197 253)"),

    BLUE_400("rgb(96 165 250)"),

    BLUE_500("rgb(59 130 246)"),

    BLUE_600("rgb(37 99 235)"),

    BLUE_700("rgb(29 78 216)"),

    BLUE_800("rgb(30 64 175)"),

    BLUE_900("rgb(30 58 138)"),

    INDIGO_050("rgb(238 242 255)"),

    INDIGO_100("rgb(224 231 255)"),

    INDIGO_200("rgb(199 210 254)"),

    INDIGO_300("rgb(165 180 252)"),

    INDIGO_400("rgb(129 140 248)"),

    INDIGO_500("rgb(99 102 241)"),

    INDIGO_600("rgb(79 70 229)"),

    INDIGO_700("rgb(67 56 202)"),

    INDIGO_800("rgb(55 48 163)"),

    INDIGO_900("rgb(49 46 129)"),

    VIOLET_050("rgb(245 243 255)"),

    VIOLET_100("rgb(237 233 254)"),

    VIOLET_200("rgb(221 214 254)"),

    VIOLET_300("rgb(196 181 253)"),

    VIOLET_400("rgb(167 139 250)"),

    VIOLET_500("rgb(139 92 246)"),

    VIOLET_600("rgb(124 58 237)"),

    VIOLET_700("rgb(109 40 217)"),

    VIOLET_800("rgb(91 33 182)"),

    VIOLET_900("rgb(76 29 149)"),

    PURPLE_050("rgb(250 245 255)"),

    PURPLE_100("rgb(243 232 255)"),

    PURPLE_200("rgb(233 213 255)"),

    PURPLE_300("rgb(216 180 254)"),

    PURPLE_400("rgb(192 132 252)"),

    PURPLE_500("rgb(168 85 247)"),

    PURPLE_600("rgb(147 51 234)"),

    PURPLE_700("rgb(126 34 206)"),

    PURPLE_800("rgb(107 33 168)"),

    PURPLE_900("rgb(88 28 135)"),

    FUCHSIA_050("rgb(253 244 255)"),

    FUCHSIA_100("rgb(250 232 255)"),

    FUCHSIA_200("rgb(245 208 254)"),

    FUCHSIA_300("rgb(240 171 252)"),

    FUCHSIA_400("rgb(232 121 249)"),

    FUCHSIA_500("rgb(217 70 239)"),

    FUCHSIA_600("rgb(192 38 211)"),

    FUCHSIA_700("rgb(162 28 175)"),

    FUCHSIA_800("rgb(134 25 143)"),

    FUCHSIA_900("rgb(112 26 117)"),

    PINK_050("rgb(253 242 248)"),

    PINK_100("rgb(252 231 243)"),

    PINK_200("rgb(251 207 232)"),

    PINK_300("rgb(249 168 212)"),

    PINK_400("rgb(244 114 182)"),

    PINK_500("rgb(236 72 153)"),

    PINK_600("rgb(219 39 119)"),

    PINK_700("rgb(190 24 93)"),

    PINK_800("rgb(157 23 77)"),

    PINK_900("rgb(131 24 67)"),

    ROSE_050("rgb(255 241 242)"),

    ROSE_100("rgb(255 228 230)"),

    ROSE_200("rgb(254 205 211)"),

    ROSE_300("rgb(253 164 175)"),

    ROSE_400("rgb(251 113 133)"),

    ROSE_500("rgb(244 63 94)"),

    ROSE_600("rgb(225 29 72)"),

    ROSE_700("rgb(190 18 60)"),

    ROSE_800("rgb(159 18 57)"),

    ROSE_900("rgb(136 19 55)");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private TextColor(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { color: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code cursor} CSS property.
   */
  public enum Cursor implements StyleClass {

    AUTO("auto"),

    DEFAULT("default"),

    POINTER("pointer"),

    WAIT("wait"),

    TEXT("text"),

    MOVE("move"),

    HELP("help"),

    NOT_ALLOWED("not-allowed"),

    NONE("none"),

    CONTEXT_MENU("context-menu"),

    PROGRESS("progress"),

    CELL("cell"),

    CROSSHAIR("crosshair"),

    VERTICAL_TEXT("vertical-text"),

    ALIAS("alias"),

    COPY("copy"),

    NO_DROP("no-drop"),

    GRAB("grab"),

    GRABBING("grabbing"),

    ALL_SCROLL("all-scroll"),

    COL_RESIZE("col-resize"),

    ROW_RESIZE("row-resize"),

    N_RESIZE("n-resize"),

    E_RESIZE("e-resize"),

    S_RESIZE("s-resize"),

    W_RESIZE("w-resize"),

    NE_RESIZE("ne-resize"),

    NW_RESIZE("nw-resize"),

    SE_RESIZE("se-resize"),

    SW_RESIZE("sw-resize"),

    EW_RESIZE("ew-resize"),

    NS_RESIZE("ns-resize"),

    NESW_RESIZE("nesw-resize"),

    NWSE_RESIZE("nwse-resize"),

    ZOOM_IN("zoom-in"),

    ZOOM_OUT("zoom-out");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private Cursor(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { cursor: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code display} CSS property.
   */
  public enum Display implements StyleClass {

    NONE("none"),

    BLOCK("block"),

    FLOW_ROOT("flow-root"),

    INLINE_BLOCK("inline-block"),

    INLINE("inline"),

    FLEX("flex"),

    INLINE_FLEX("inline-flex"),

    GRID("grid"),

    INLINE_GRID("inline-grid"),

    TABLE("table"),

    TABLE_CAPTION("table-caption"),

    TABLE_CELL("table-cell"),

    TABLE_COLUMN("table-column"),

    TABLE_COLUMN_GROUP("table-column-group"),

    TABLE_FOOTER_GROUP("table-footer-group"),

    TABLE_HEADER_GROUP("table-header-group"),

    TABLE_ROW_GROUP("table-row-group"),

    TABLE_ROW("table-row");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private Display(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { display: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code fill} CSS property.
   */
  public enum Fill implements StyleClass {

    NONE("none"),

    INHERIT("inherit"),

    CURRENT("currentColor"),

    TRANSPARENT("transparent"),

    BLACK("rgb(0 0 0)"),

    WHITE("rgb(255 255 255)"),

    SLATE_050("rgb(248 250 252)"),

    SLATE_100("rgb(241 245 249)"),

    SLATE_200("rgb(226 232 240)"),

    SLATE_300("rgb(203 213 225)"),

    SLATE_400("rgb(148 163 184)"),

    SLATE_500("rgb(100 116 139)"),

    SLATE_600("rgb(71 85 105)"),

    SLATE_700("rgb(51 65 85)"),

    SLATE_800("rgb(30 41 59)"),

    SLATE_900("rgb(15 23 42)"),

    GRAY_050("rgb(249 250 251)"),

    GRAY_100("rgb(243 244 246)"),

    GRAY_200("rgb(229 231 235)"),

    GRAY_300("rgb(209 213 219)"),

    GRAY_400("rgb(156 163 175)"),

    GRAY_500("rgb(107 114 128)"),

    GRAY_600("rgb(75 85 99)"),

    GRAY_700("rgb(55 65 81)"),

    GRAY_800("rgb(31 41 55)"),

    GRAY_900("rgb(17 24 39)"),

    ZINC_050("rgb(250 250 250)"),

    ZINC_100("rgb(244 244 245)"),

    ZINC_200("rgb(228 228 231)"),

    ZINC_300("rgb(212 212 216)"),

    ZINC_400("rgb(161 161 170)"),

    ZINC_500("rgb(113 113 122)"),

    ZINC_600("rgb(82 82 91)"),

    ZINC_700("rgb(63 63 70)"),

    ZINC_800("rgb(39 39 42)"),

    ZINC_900("rgb(24 24 27)"),

    NEUTRAL_050("rgb(250 250 250)"),

    NEUTRAL_100("rgb(245 245 245)"),

    NEUTRAL_200("rgb(229 229 229)"),

    NEUTRAL_300("rgb(212 212 212)"),

    NEUTRAL_400("rgb(163 163 163)"),

    NEUTRAL_500("rgb(115 115 115)"),

    NEUTRAL_600("rgb(82 82 82)"),

    NEUTRAL_700("rgb(64 64 64)"),

    NEUTRAL_800("rgb(38 38 38)"),

    NEUTRAL_900("rgb(23 23 23)"),

    STONE_050("rgb(250 250 249)"),

    STONE_100("rgb(245 245 244)"),

    STONE_200("rgb(231 229 228)"),

    STONE_300("rgb(214 211 209)"),

    STONE_400("rgb(168 162 158)"),

    STONE_500("rgb(120 113 108)"),

    STONE_600("rgb(87 83 78)"),

    STONE_700("rgb(68 64 60)"),

    STONE_800("rgb(41 37 36)"),

    STONE_900("rgb(28 25 23)"),

    RED_050("rgb(254 242 242)"),

    RED_100("rgb(254 226 226)"),

    RED_200("rgb(254 202 202)"),

    RED_300("rgb(252 165 165)"),

    RED_400("rgb(248 113 113)"),

    RED_500("rgb(239 68 68)"),

    RED_600("rgb(220 38 38)"),

    RED_700("rgb(185 28 28)"),

    RED_800("rgb(153 27 27)"),

    RED_900("rgb(127 29 29)"),

    ORANGE_050("rgb(255 247 237)"),

    ORANGE_100("rgb(255 237 213)"),

    ORANGE_200("rgb(254 215 170)"),

    ORANGE_300("rgb(253 186 116)"),

    ORANGE_400("rgb(251 146 60)"),

    ORANGE_500("rgb(249 115 22)"),

    ORANGE_600("rgb(234 88 12)"),

    ORANGE_700("rgb(194 65 12)"),

    ORANGE_800("rgb(154 52 18)"),

    ORANGE_900("rgb(124 45 18)"),

    AMBER_050("rgb(255 251 235)"),

    AMBER_100("rgb(254 243 199)"),

    AMBER_200("rgb(253 230 138)"),

    AMBER_300("rgb(252 211 77)"),

    AMBER_400("rgb(251 191 36)"),

    AMBER_500("rgb(245 158 11)"),

    AMBER_600("rgb(217 119 6)"),

    AMBER_700("rgb(180 83 9)"),

    AMBER_800("rgb(146 64 14)"),

    AMBER_900("rgb(120 53 15)"),

    YELLOW_050("rgb(254 252 232)"),

    YELLOW_100("rgb(254 249 195)"),

    YELLOW_200("rgb(254 240 138)"),

    YELLOW_300("rgb(253 224 71)"),

    YELLOW_400("rgb(250 204 21)"),

    YELLOW_500("rgb(234 179 8)"),

    YELLOW_600("rgb(202 138 4)"),

    YELLOW_700("rgb(161 98 7)"),

    YELLOW_800("rgb(133 77 14)"),

    YELLOW_900("rgb(113 63 18)"),

    LIME_050("rgb(247 254 231)"),

    LIME_100("rgb(236 252 203)"),

    LIME_200("rgb(217 249 157)"),

    LIME_300("rgb(190 242 100)"),

    LIME_400("rgb(163 230 53)"),

    LIME_500("rgb(132 204 22)"),

    LIME_600("rgb(101 163 13)"),

    LIME_700("rgb(77 124 15)"),

    LIME_800("rgb(63 98 18)"),

    LIME_900("rgb(54 83 20)"),

    GREEN_050("rgb(240 253 244)"),

    GREEN_100("rgb(220 252 231)"),

    GREEN_200("rgb(187 247 208)"),

    GREEN_300("rgb(134 239 172)"),

    GREEN_400("rgb(74 222 128)"),

    GREEN_500("rgb(34 197 94)"),

    GREEN_600("rgb(22 163 74)"),

    GREEN_700("rgb(21 128 61)"),

    GREEN_800("rgb(22 101 52)"),

    GREEN_900("rgb(20 83 45)"),

    EMERALD_050("rgb(236 253 245)"),

    EMERALD_100("rgb(209 250 229)"),

    EMERALD_200("rgb(167 243 208)"),

    EMERALD_300("rgb(110 231 183)"),

    EMERALD_400("rgb(52 211 153)"),

    EMERALD_500("rgb(16 185 129)"),

    EMERALD_600("rgb(5 150 105)"),

    EMERALD_700("rgb(4 120 87)"),

    EMERALD_800("rgb(6 95 70)"),

    EMERALD_900("rgb(6 78 59)"),

    TEAL_050("rgb(240 253 250)"),

    TEAL_100("rgb(204 251 241)"),

    TEAL_200("rgb(153 246 228)"),

    TEAL_300("rgb(94 234 212)"),

    TEAL_400("rgb(45 212 191)"),

    TEAL_500("rgb(20 184 166)"),

    TEAL_600("rgb(13 148 136)"),

    TEAL_700("rgb(15 118 110)"),

    TEAL_800("rgb(17 94 89)"),

    TEAL_900("rgb(19 78 74)"),

    CYAN_050("rgb(236 254 255)"),

    CYAN_100("rgb(207 250 254)"),

    CYAN_200("rgb(165 243 252)"),

    CYAN_300("rgb(103 232 249)"),

    CYAN_400("rgb(34 211 238)"),

    CYAN_500("rgb(6 182 212)"),

    CYAN_600("rgb(8 145 178)"),

    CYAN_700("rgb(14 116 144)"),

    CYAN_800("rgb(21 94 117)"),

    CYAN_900("rgb(22 78 99)"),

    SKY_050("rgb(240 249 255)"),

    SKY_100("rgb(224 242 254)"),

    SKY_200("rgb(186 230 253)"),

    SKY_300("rgb(125 211 252)"),

    SKY_400("rgb(56 189 248)"),

    SKY_500("rgb(14 165 233)"),

    SKY_600("rgb(2 132 199)"),

    SKY_700("rgb(3 105 161)"),

    SKY_800("rgb(7 89 133)"),

    SKY_900("rgb(12 74 110)"),

    BLUE_050("rgb(239 246 255)"),

    BLUE_100("rgb(219 234 254)"),

    BLUE_200("rgb(191 219 254)"),

    BLUE_300("rgb(147 197 253)"),

    BLUE_400("rgb(96 165 250)"),

    BLUE_500("rgb(59 130 246)"),

    BLUE_600("rgb(37 99 235)"),

    BLUE_700("rgb(29 78 216)"),

    BLUE_800("rgb(30 64 175)"),

    BLUE_900("rgb(30 58 138)"),

    INDIGO_050("rgb(238 242 255)"),

    INDIGO_100("rgb(224 231 255)"),

    INDIGO_200("rgb(199 210 254)"),

    INDIGO_300("rgb(165 180 252)"),

    INDIGO_400("rgb(129 140 248)"),

    INDIGO_500("rgb(99 102 241)"),

    INDIGO_600("rgb(79 70 229)"),

    INDIGO_700("rgb(67 56 202)"),

    INDIGO_800("rgb(55 48 163)"),

    INDIGO_900("rgb(49 46 129)"),

    VIOLET_050("rgb(245 243 255)"),

    VIOLET_100("rgb(237 233 254)"),

    VIOLET_200("rgb(221 214 254)"),

    VIOLET_300("rgb(196 181 253)"),

    VIOLET_400("rgb(167 139 250)"),

    VIOLET_500("rgb(139 92 246)"),

    VIOLET_600("rgb(124 58 237)"),

    VIOLET_700("rgb(109 40 217)"),

    VIOLET_800("rgb(91 33 182)"),

    VIOLET_900("rgb(76 29 149)"),

    PURPLE_050("rgb(250 245 255)"),

    PURPLE_100("rgb(243 232 255)"),

    PURPLE_200("rgb(233 213 255)"),

    PURPLE_300("rgb(216 180 254)"),

    PURPLE_400("rgb(192 132 252)"),

    PURPLE_500("rgb(168 85 247)"),

    PURPLE_600("rgb(147 51 234)"),

    PURPLE_700("rgb(126 34 206)"),

    PURPLE_800("rgb(107 33 168)"),

    PURPLE_900("rgb(88 28 135)"),

    FUCHSIA_050("rgb(253 244 255)"),

    FUCHSIA_100("rgb(250 232 255)"),

    FUCHSIA_200("rgb(245 208 254)"),

    FUCHSIA_300("rgb(240 171 252)"),

    FUCHSIA_400("rgb(232 121 249)"),

    FUCHSIA_500("rgb(217 70 239)"),

    FUCHSIA_600("rgb(192 38 211)"),

    FUCHSIA_700("rgb(162 28 175)"),

    FUCHSIA_800("rgb(134 25 143)"),

    FUCHSIA_900("rgb(112 26 117)"),

    PINK_050("rgb(253 242 248)"),

    PINK_100("rgb(252 231 243)"),

    PINK_200("rgb(251 207 232)"),

    PINK_300("rgb(249 168 212)"),

    PINK_400("rgb(244 114 182)"),

    PINK_500("rgb(236 72 153)"),

    PINK_600("rgb(219 39 119)"),

    PINK_700("rgb(190 24 93)"),

    PINK_800("rgb(157 23 77)"),

    PINK_900("rgb(131 24 67)"),

    ROSE_050("rgb(255 241 242)"),

    ROSE_100("rgb(255 228 230)"),

    ROSE_200("rgb(254 205 211)"),

    ROSE_300("rgb(253 164 175)"),

    ROSE_400("rgb(251 113 133)"),

    ROSE_500("rgb(244 63 94)"),

    ROSE_600("rgb(225 29 72)"),

    ROSE_700("rgb(190 18 60)"),

    ROSE_800("rgb(159 18 57)"),

    ROSE_900("rgb(136 19 55)");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private Fill(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { fill: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code flex} CSS property.
   */
  public enum Flex implements StyleClass {

    ONE("1 1 0%"),

    AUTO("1 1 auto"),

    INITIAL("0 1 auto"),

    NONE("none");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private Flex(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { flex: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code flex-direction} CSS property.
   */
  public enum FlexDirection implements StyleClass {

    ROW("row"),

    ROW_REVERSE("row-reverse"),

    COLUMN("column"),

    COLUMN_REVERSE("column-reverse");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private FlexDirection(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { flex-direction: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code flex-grow} CSS property.
   */
  public enum FlexGrow implements StyleClass {

    V1("1"),

    V0("0");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private FlexGrow(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { flex-grow: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code flex-wrap} CSS property.
   */
  public enum FlexWrap implements StyleClass {

    WRAP("wrap"),

    WRAP_REVERSE("wrap-reverse"),

    NOWRAP("nowrap");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private FlexWrap(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { flex-wrap: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code font-size} and {@code line-height} CSS properties.
   */
  public enum FontSize implements StyleClass {

    XS("0.75rem", "1rem"),

    SM("0.875rem", "1.25rem"),

    BASE("1rem", "1.5rem"),

    LG("1.125rem", "1.75rem"),

    XL("1.25rem", "1.75rem"),

    XL2("1.5rem", "2rem"),

    XL3("1.875rem", "2.25rem"),

    XL4("2.25rem", "2.5rem"),

    XL5("3rem", "1"),

    XL6("3.75rem", "1"),

    XL7("4.5rem", "1"),

    XL8("6rem", "1"),

    XL9("8rem", "1");

    private final String className = ClassSelectorSeqId.next();

    private final String value1;

    private final String value2;

    private FontSize(String value1, String value2) {
      this.value1 = value1;
      this.value2 = value2;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { font-size: " + value1 + "; line-height: " + value2 + " }";
    }

  }

  /**
   * Utility classes for the {@code font-style} CSS property.
   */
  public enum FontStyle implements StyleClass {

    ITALIC("italic"),

    NORMAL("normal");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private FontStyle(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { font-style: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code font-weight} CSS property.
   */
  public enum FontWeight implements StyleClass {

    THIN("100"),

    EXTRALIGHT("200"),

    LIGHT("300"),

    NORMAL("400"),

    MEDIUM("500"),

    SEMIBOLD("600"),

    BOLD("700"),

    EXTRABOLD("800"),

    BLACK("900");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private FontWeight(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { font-weight: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code height} CSS property.
   */
  public enum Height implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem"),

    AUTO("auto"),

    HALF("50%"),

    THIRD1("33.333333%"),

    THIRD2("66.666667%"),

    QUARTER1("25%"),

    QUARTER2("50%"),

    QUARTER3("75%"),

    FIFTH1("20%"),

    FIFTH2("40%"),

    FIFTH3("60%"),

    FIFTH4("80%"),

    SIXTH1("16.666667%"),

    SIXTH2("33.333333%"),

    SIXTH3("50%"),

    SIXTH4("66.666667%"),

    SIXTH5("83.333333%"),

    FULL("100%"),

    SCREEN("100vh"),

    MIN("min-content"),

    MAX("max-content"),

    FIT("fit-content");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private Height(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { height: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code top} CSS property.
   */
  public enum Top implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem"),

    AUTO("auto"),

    HALF("50%"),

    THIRD1("33.333333%"),

    THIRD2("66.666667%"),

    QUARTER1("25%"),

    QUARTER2("50%"),

    QUARTER3("75%"),

    FULL("100%");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private Top(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { top: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code right} CSS property.
   */
  public enum Right implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem"),

    AUTO("auto"),

    HALF("50%"),

    THIRD1("33.333333%"),

    THIRD2("66.666667%"),

    QUARTER1("25%"),

    QUARTER2("50%"),

    QUARTER3("75%"),

    FULL("100%");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private Right(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { right: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code bottom} CSS property.
   */
  public enum Bottom implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem"),

    AUTO("auto"),

    HALF("50%"),

    THIRD1("33.333333%"),

    THIRD2("66.666667%"),

    QUARTER1("25%"),

    QUARTER2("50%"),

    QUARTER3("75%"),

    FULL("100%");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private Bottom(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { bottom: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code left} CSS property.
   */
  public enum Left implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem"),

    AUTO("auto"),

    HALF("50%"),

    THIRD1("33.333333%"),

    THIRD2("66.666667%"),

    QUARTER1("25%"),

    QUARTER2("50%"),

    QUARTER3("75%"),

    FULL("100%");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private Left(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { left: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code inset} CSS property.
   */
  public enum Inset implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem"),

    AUTO("auto"),

    HALF("50%"),

    THIRD1("33.333333%"),

    THIRD2("66.666667%"),

    QUARTER1("25%"),

    QUARTER2("50%"),

    QUARTER3("75%"),

    FULL("100%");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private Inset(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { inset: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code left} and {@code right} CSS properties.
   */
  public enum InsetX implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem"),

    AUTO("auto"),

    HALF("50%"),

    THIRD1("33.333333%"),

    THIRD2("66.666667%"),

    QUARTER1("25%"),

    QUARTER2("50%"),

    QUARTER3("75%"),

    FULL("100%");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private InsetX(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { left: " + value + "; right: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code top} and {@code bottom} CSS properties.
   */
  public enum InsetY implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem"),

    AUTO("auto"),

    HALF("50%"),

    THIRD1("33.333333%"),

    THIRD2("66.666667%"),

    QUARTER1("25%"),

    QUARTER2("50%"),

    QUARTER3("75%"),

    FULL("100%");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private InsetY(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { top: " + value + "; bottom: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code justify-content} CSS property.
   */
  public enum JustifyContent implements StyleClass {

    NORMAL("normal"),

    START("flex-start"),

    END("flex-end"),

    CENTER("center"),

    BETWEEN("space-between"),

    AROUND("space-around"),

    EVENLY("space-evenly"),

    STRETCH("stretch");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private JustifyContent(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { justify-content: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code letter-spacing} CSS property.
   */
  public enum LetterSpacing implements StyleClass {

    TIGHTER("-0.05em"),

    TIGHT("-0.025em"),

    NORMAL("0em"),

    WIDE("0.025em"),

    WIDER("0.05em"),

    WIDEST("0.1em");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private LetterSpacing(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { letter-spacing: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code line-height} CSS property.
   */
  public enum LineHeight implements StyleClass {

    NONE("1"),

    TIGHT("1.25"),

    SNUG("1.375"),

    NORMAL("1.5"),

    RELAXED("1.625"),

    LOOSE("2"),

    PX12("0.75rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private LineHeight(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { line-height: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code list-style-position} CSS property.
   */
  public enum ListStylePosition implements StyleClass {

    INSIDE("inside"),

    OUTSIDE("outside");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private ListStylePosition(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { list-style-position: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code list-style-type} CSS property.
   */
  public enum ListStyleType implements StyleClass {

    NONE("none"),

    DISC("disc"),

    DECIMAL("decimal");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private ListStyleType(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { list-style-type: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code margin} CSS property.
   */
  public enum Margin implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem"),

    AUTO("auto");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private Margin(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { margin: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code margin-top} CSS property.
   */
  public enum MarginTop implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem"),

    AUTO("auto");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private MarginTop(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { margin-top: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code margin-right} CSS property.
   */
  public enum MarginRight implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem"),

    AUTO("auto");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private MarginRight(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { margin-right: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code margin-bottom} CSS property.
   */
  public enum MarginBottom implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem"),

    AUTO("auto");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private MarginBottom(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { margin-bottom: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code margin-left} CSS property.
   */
  public enum MarginLeft implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem"),

    AUTO("auto");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private MarginLeft(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { margin-left: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code margin-right} and {@code margin-left} CSS properties.
   */
  public enum MarginX implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem"),

    AUTO("auto");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private MarginX(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { margin-right: " + value + "; margin-left: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code margin-top} and {@code margin-bottom} CSS properties.
   */
  public enum MarginY implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem"),

    AUTO("auto");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private MarginY(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { margin-top: " + value + "; margin-bottom: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code max-width} CSS property.
   */
  public enum MaxWidth implements StyleClass {

    PX0("0px"),

    NONE("none"),

    PX320("20rem"),

    PX384("24rem"),

    PX448("28rem"),

    PX512("32rem"),

    PX576("36rem"),

    PX672("42rem"),

    PX768("48rem"),

    PX896("56rem"),

    PX1024("64rem"),

    PX1152("72rem"),

    PX1280("80rem"),

    FULL("100%"),

    MIN("min-content"),

    MAX("max-content"),

    FIT("fit-content"),

    PROSE("65ch"),

    SCREEN_SMALL("640px"),

    SCREEN_MEDIUM("768px"),

    SCREEN_LARGE("1024px"),

    SCREEN_EXTRA("1280px"),

    SCREEN_MAX("1536px");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private MaxWidth(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { max-width: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code min-height} CSS property.
   */
  public enum MinHeight implements StyleClass {

    PX0("0px"),

    FULL("100%"),

    SCREEN("100vh"),

    MIN("min-content"),

    MAX("max-content"),

    FIT("fit-content");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private MinHeight(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { min-height: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code object-fit} CSS property.
   */
  public enum ObjectFit implements StyleClass {

    CONTAIN("contain"),

    COVER("cover"),

    FILL("fill"),

    NONE("none"),

    SCALE_DOWN("scale-down");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private ObjectFit(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { object-fit: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code opacity} CSS property.
   */
  public enum Opacity implements StyleClass {

    P0("0"),

    P5("0.05"),

    P10("0.1"),

    P20("0.2"),

    P30("0.3"),

    P40("0.4"),

    P50("0.5"),

    P60("0.6"),

    P70("0.7"),

    P80("0.8"),

    P90("0.9"),

    P95("0.95"),

    P100("1");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private Opacity(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { opacity: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code outline-color} CSS property.
   */
  public enum OutlineColor implements StyleClass {

    INHERIT("inherit"),

    CURRENT("currentColor"),

    TRANSPARENT("transparent"),

    BLACK("rgb(0 0 0)"),

    WHITE("rgb(255 255 255)"),

    SLATE_050("rgb(248 250 252)"),

    SLATE_100("rgb(241 245 249)"),

    SLATE_200("rgb(226 232 240)"),

    SLATE_300("rgb(203 213 225)"),

    SLATE_400("rgb(148 163 184)"),

    SLATE_500("rgb(100 116 139)"),

    SLATE_600("rgb(71 85 105)"),

    SLATE_700("rgb(51 65 85)"),

    SLATE_800("rgb(30 41 59)"),

    SLATE_900("rgb(15 23 42)"),

    GRAY_050("rgb(249 250 251)"),

    GRAY_100("rgb(243 244 246)"),

    GRAY_200("rgb(229 231 235)"),

    GRAY_300("rgb(209 213 219)"),

    GRAY_400("rgb(156 163 175)"),

    GRAY_500("rgb(107 114 128)"),

    GRAY_600("rgb(75 85 99)"),

    GRAY_700("rgb(55 65 81)"),

    GRAY_800("rgb(31 41 55)"),

    GRAY_900("rgb(17 24 39)"),

    ZINC_050("rgb(250 250 250)"),

    ZINC_100("rgb(244 244 245)"),

    ZINC_200("rgb(228 228 231)"),

    ZINC_300("rgb(212 212 216)"),

    ZINC_400("rgb(161 161 170)"),

    ZINC_500("rgb(113 113 122)"),

    ZINC_600("rgb(82 82 91)"),

    ZINC_700("rgb(63 63 70)"),

    ZINC_800("rgb(39 39 42)"),

    ZINC_900("rgb(24 24 27)"),

    NEUTRAL_050("rgb(250 250 250)"),

    NEUTRAL_100("rgb(245 245 245)"),

    NEUTRAL_200("rgb(229 229 229)"),

    NEUTRAL_300("rgb(212 212 212)"),

    NEUTRAL_400("rgb(163 163 163)"),

    NEUTRAL_500("rgb(115 115 115)"),

    NEUTRAL_600("rgb(82 82 82)"),

    NEUTRAL_700("rgb(64 64 64)"),

    NEUTRAL_800("rgb(38 38 38)"),

    NEUTRAL_900("rgb(23 23 23)"),

    STONE_050("rgb(250 250 249)"),

    STONE_100("rgb(245 245 244)"),

    STONE_200("rgb(231 229 228)"),

    STONE_300("rgb(214 211 209)"),

    STONE_400("rgb(168 162 158)"),

    STONE_500("rgb(120 113 108)"),

    STONE_600("rgb(87 83 78)"),

    STONE_700("rgb(68 64 60)"),

    STONE_800("rgb(41 37 36)"),

    STONE_900("rgb(28 25 23)"),

    RED_050("rgb(254 242 242)"),

    RED_100("rgb(254 226 226)"),

    RED_200("rgb(254 202 202)"),

    RED_300("rgb(252 165 165)"),

    RED_400("rgb(248 113 113)"),

    RED_500("rgb(239 68 68)"),

    RED_600("rgb(220 38 38)"),

    RED_700("rgb(185 28 28)"),

    RED_800("rgb(153 27 27)"),

    RED_900("rgb(127 29 29)"),

    ORANGE_050("rgb(255 247 237)"),

    ORANGE_100("rgb(255 237 213)"),

    ORANGE_200("rgb(254 215 170)"),

    ORANGE_300("rgb(253 186 116)"),

    ORANGE_400("rgb(251 146 60)"),

    ORANGE_500("rgb(249 115 22)"),

    ORANGE_600("rgb(234 88 12)"),

    ORANGE_700("rgb(194 65 12)"),

    ORANGE_800("rgb(154 52 18)"),

    ORANGE_900("rgb(124 45 18)"),

    AMBER_050("rgb(255 251 235)"),

    AMBER_100("rgb(254 243 199)"),

    AMBER_200("rgb(253 230 138)"),

    AMBER_300("rgb(252 211 77)"),

    AMBER_400("rgb(251 191 36)"),

    AMBER_500("rgb(245 158 11)"),

    AMBER_600("rgb(217 119 6)"),

    AMBER_700("rgb(180 83 9)"),

    AMBER_800("rgb(146 64 14)"),

    AMBER_900("rgb(120 53 15)"),

    YELLOW_050("rgb(254 252 232)"),

    YELLOW_100("rgb(254 249 195)"),

    YELLOW_200("rgb(254 240 138)"),

    YELLOW_300("rgb(253 224 71)"),

    YELLOW_400("rgb(250 204 21)"),

    YELLOW_500("rgb(234 179 8)"),

    YELLOW_600("rgb(202 138 4)"),

    YELLOW_700("rgb(161 98 7)"),

    YELLOW_800("rgb(133 77 14)"),

    YELLOW_900("rgb(113 63 18)"),

    LIME_050("rgb(247 254 231)"),

    LIME_100("rgb(236 252 203)"),

    LIME_200("rgb(217 249 157)"),

    LIME_300("rgb(190 242 100)"),

    LIME_400("rgb(163 230 53)"),

    LIME_500("rgb(132 204 22)"),

    LIME_600("rgb(101 163 13)"),

    LIME_700("rgb(77 124 15)"),

    LIME_800("rgb(63 98 18)"),

    LIME_900("rgb(54 83 20)"),

    GREEN_050("rgb(240 253 244)"),

    GREEN_100("rgb(220 252 231)"),

    GREEN_200("rgb(187 247 208)"),

    GREEN_300("rgb(134 239 172)"),

    GREEN_400("rgb(74 222 128)"),

    GREEN_500("rgb(34 197 94)"),

    GREEN_600("rgb(22 163 74)"),

    GREEN_700("rgb(21 128 61)"),

    GREEN_800("rgb(22 101 52)"),

    GREEN_900("rgb(20 83 45)"),

    EMERALD_050("rgb(236 253 245)"),

    EMERALD_100("rgb(209 250 229)"),

    EMERALD_200("rgb(167 243 208)"),

    EMERALD_300("rgb(110 231 183)"),

    EMERALD_400("rgb(52 211 153)"),

    EMERALD_500("rgb(16 185 129)"),

    EMERALD_600("rgb(5 150 105)"),

    EMERALD_700("rgb(4 120 87)"),

    EMERALD_800("rgb(6 95 70)"),

    EMERALD_900("rgb(6 78 59)"),

    TEAL_050("rgb(240 253 250)"),

    TEAL_100("rgb(204 251 241)"),

    TEAL_200("rgb(153 246 228)"),

    TEAL_300("rgb(94 234 212)"),

    TEAL_400("rgb(45 212 191)"),

    TEAL_500("rgb(20 184 166)"),

    TEAL_600("rgb(13 148 136)"),

    TEAL_700("rgb(15 118 110)"),

    TEAL_800("rgb(17 94 89)"),

    TEAL_900("rgb(19 78 74)"),

    CYAN_050("rgb(236 254 255)"),

    CYAN_100("rgb(207 250 254)"),

    CYAN_200("rgb(165 243 252)"),

    CYAN_300("rgb(103 232 249)"),

    CYAN_400("rgb(34 211 238)"),

    CYAN_500("rgb(6 182 212)"),

    CYAN_600("rgb(8 145 178)"),

    CYAN_700("rgb(14 116 144)"),

    CYAN_800("rgb(21 94 117)"),

    CYAN_900("rgb(22 78 99)"),

    SKY_050("rgb(240 249 255)"),

    SKY_100("rgb(224 242 254)"),

    SKY_200("rgb(186 230 253)"),

    SKY_300("rgb(125 211 252)"),

    SKY_400("rgb(56 189 248)"),

    SKY_500("rgb(14 165 233)"),

    SKY_600("rgb(2 132 199)"),

    SKY_700("rgb(3 105 161)"),

    SKY_800("rgb(7 89 133)"),

    SKY_900("rgb(12 74 110)"),

    BLUE_050("rgb(239 246 255)"),

    BLUE_100("rgb(219 234 254)"),

    BLUE_200("rgb(191 219 254)"),

    BLUE_300("rgb(147 197 253)"),

    BLUE_400("rgb(96 165 250)"),

    BLUE_500("rgb(59 130 246)"),

    BLUE_600("rgb(37 99 235)"),

    BLUE_700("rgb(29 78 216)"),

    BLUE_800("rgb(30 64 175)"),

    BLUE_900("rgb(30 58 138)"),

    INDIGO_050("rgb(238 242 255)"),

    INDIGO_100("rgb(224 231 255)"),

    INDIGO_200("rgb(199 210 254)"),

    INDIGO_300("rgb(165 180 252)"),

    INDIGO_400("rgb(129 140 248)"),

    INDIGO_500("rgb(99 102 241)"),

    INDIGO_600("rgb(79 70 229)"),

    INDIGO_700("rgb(67 56 202)"),

    INDIGO_800("rgb(55 48 163)"),

    INDIGO_900("rgb(49 46 129)"),

    VIOLET_050("rgb(245 243 255)"),

    VIOLET_100("rgb(237 233 254)"),

    VIOLET_200("rgb(221 214 254)"),

    VIOLET_300("rgb(196 181 253)"),

    VIOLET_400("rgb(167 139 250)"),

    VIOLET_500("rgb(139 92 246)"),

    VIOLET_600("rgb(124 58 237)"),

    VIOLET_700("rgb(109 40 217)"),

    VIOLET_800("rgb(91 33 182)"),

    VIOLET_900("rgb(76 29 149)"),

    PURPLE_050("rgb(250 245 255)"),

    PURPLE_100("rgb(243 232 255)"),

    PURPLE_200("rgb(233 213 255)"),

    PURPLE_300("rgb(216 180 254)"),

    PURPLE_400("rgb(192 132 252)"),

    PURPLE_500("rgb(168 85 247)"),

    PURPLE_600("rgb(147 51 234)"),

    PURPLE_700("rgb(126 34 206)"),

    PURPLE_800("rgb(107 33 168)"),

    PURPLE_900("rgb(88 28 135)"),

    FUCHSIA_050("rgb(253 244 255)"),

    FUCHSIA_100("rgb(250 232 255)"),

    FUCHSIA_200("rgb(245 208 254)"),

    FUCHSIA_300("rgb(240 171 252)"),

    FUCHSIA_400("rgb(232 121 249)"),

    FUCHSIA_500("rgb(217 70 239)"),

    FUCHSIA_600("rgb(192 38 211)"),

    FUCHSIA_700("rgb(162 28 175)"),

    FUCHSIA_800("rgb(134 25 143)"),

    FUCHSIA_900("rgb(112 26 117)"),

    PINK_050("rgb(253 242 248)"),

    PINK_100("rgb(252 231 243)"),

    PINK_200("rgb(251 207 232)"),

    PINK_300("rgb(249 168 212)"),

    PINK_400("rgb(244 114 182)"),

    PINK_500("rgb(236 72 153)"),

    PINK_600("rgb(219 39 119)"),

    PINK_700("rgb(190 24 93)"),

    PINK_800("rgb(157 23 77)"),

    PINK_900("rgb(131 24 67)"),

    ROSE_050("rgb(255 241 242)"),

    ROSE_100("rgb(255 228 230)"),

    ROSE_200("rgb(254 205 211)"),

    ROSE_300("rgb(253 164 175)"),

    ROSE_400("rgb(251 113 133)"),

    ROSE_500("rgb(244 63 94)"),

    ROSE_600("rgb(225 29 72)"),

    ROSE_700("rgb(190 18 60)"),

    ROSE_800("rgb(159 18 57)"),

    ROSE_900("rgb(136 19 55)");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private OutlineColor(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { outline-color: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code outline-offset} CSS property.
   */
  public enum OutlineOffset implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("2px"),

    PX4("4px"),

    PX8("8px");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private OutlineOffset(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { outline-offset: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code outline-style} CSS property.
   */
  public enum OutlineStyle implements StyleClass {

    NONE("outline: 2px solid transparent; outline-offset: 2px"),

    SOLID("outline-style: solid"),

    DASHED("outline-style: dashed"),

    DOTTED("outline-style: dotted"),

    DOUBLE("outline-style: double");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private OutlineStyle(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code outline-width} CSS property.
   */
  public enum OutlineWidth implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("2px"),

    PX4("4px"),

    PX8("8px");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private OutlineWidth(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { outline-width: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code overflow} CSS property.
   */
  public enum Overflow implements StyleClass {

    AUTO("auto"),

    HIDDEN("hidden"),

    CLIP("clip"),

    VISIBLE("visible"),

    SCROLL("scroll");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private Overflow(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { overflow: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code overflow-x} CSS property.
   */
  public enum OverflowX implements StyleClass {

    AUTO("auto"),

    HIDDEN("hidden"),

    CLIP("clip"),

    VISIBLE("visible"),

    SCROLL("scroll");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private OverflowX(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { overflow-x: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code overflow-y} CSS property.
   */
  public enum OverflowY implements StyleClass {

    AUTO("auto"),

    HIDDEN("hidden"),

    CLIP("clip"),

    VISIBLE("visible"),

    SCROLL("scroll");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private OverflowY(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { overflow-y: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code padding} CSS property.
   */
  public enum Padding implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private Padding(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { padding: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code padding-top} CSS property.
   */
  public enum PaddingTop implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private PaddingTop(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { padding-top: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code padding-right} CSS property.
   */
  public enum PaddingRight implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private PaddingRight(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { padding-right: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code padding-bottom} CSS property.
   */
  public enum PaddingBottom implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private PaddingBottom(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { padding-bottom: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code padding-left} CSS property.
   */
  public enum PaddingLeft implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private PaddingLeft(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { padding-left: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code padding-right} and {@code padding-left} CSS properties.
   */
  public enum PaddingX implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private PaddingX(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { padding-right: " + value + "; padding-left: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code padding-top} and {@code padding-bottom} CSS properties.
   */
  public enum PaddingY implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private PaddingY(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { padding-top: " + value + "; padding-bottom: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code position} CSS property.
   */
  public enum Position implements StyleClass {

    STATIC("static"),

    FIXED("fixed"),

    ABSOLUTE("absolute"),

    RELATIVE("relative"),

    STICKY("sticky");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private Position(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { position: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code margin-left} CSS property.
   */
  public enum SpaceX implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private SpaceX(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " > :not([hidden]) ~ :not([hidden]) { margin-left: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code margin-top} CSS property.
   */
  public enum SpaceY implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private SpaceY(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " > :not([hidden]) ~ :not([hidden]) { margin-top: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code text-align} CSS property.
   */
  public enum TextAlign implements StyleClass {

    LEFT("left"),

    CENTER("center"),

    RIGHT("right"),

    JUSTIFY("justify"),

    START("start"),

    END("end");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private TextAlign(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { text-align: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code text-decoration} CSS property.
   */
  public enum TextDecoration implements StyleClass {

    UNDERLINE("underline"),

    OVERLINE("overline"),

    LINE_THROUGH("line-through"),

    NONE("none");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private TextDecoration(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { text-decoration: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code text-transform} CSS property.
   */
  public enum TextTransform implements StyleClass {

    UPPERCASE("uppercase"),

    LOWERCASE("lowercase"),

    CAPITALIZE("capitalize"),

    NONE("none");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private TextTransform(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { text-transform: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code width} CSS property.
   */
  public enum Width implements StyleClass {

    PX0("0px"),

    PX1("1px"),

    PX2("0.125rem"),

    PX4("0.25rem"),

    PX6("0.375rem"),

    PX8("0.5rem"),

    PX10("0.625rem"),

    PX12("0.75rem"),

    PX14("0.875rem"),

    PX16("1rem"),

    PX20("1.25rem"),

    PX24("1.5rem"),

    PX28("1.75rem"),

    PX32("2rem"),

    PX36("2.25rem"),

    PX40("2.5rem"),

    PX44("2.75rem"),

    PX48("3rem"),

    PX56("3.5rem"),

    PX64("4rem"),

    PX80("5rem"),

    PX96("6rem"),

    PX112("7rem"),

    PX128("8rem"),

    PX144("9rem"),

    PX160("10rem"),

    PX176("11rem"),

    PX192("12rem"),

    PX208("13rem"),

    PX224("14rem"),

    PX240("15rem"),

    PX256("16rem"),

    PX288("18rem"),

    PX320("20rem"),

    PX384("24rem"),

    AUTO("auto"),

    HALF("50%"),

    THIRD1("33.333333%"),

    THIRD2("66.666667%"),

    QUARTER1("25%"),

    QUARTER2("50%"),

    QUARTER3("75%"),

    FIFTH1("20%"),

    FIFTH2("40%"),

    FIFTH3("60%"),

    FIFTH4("80%"),

    SIXTH1("16.666667%"),

    SIXTH2("33.333333%"),

    SIXTH3("50%"),

    SIXTH4("66.666667%"),

    SIXTH5("83.333333%"),

    TWELFTH1("8.333333%"),

    TWELFTH2("16.666667%"),

    TWELFTH3("25%"),

    TWELFTH4("33.333333%"),

    TWELFTH5("41.666667%"),

    TWELFTH6("50%"),

    TWELFTH7("58.333333%"),

    TWELFTH8("66.666667%"),

    TWELFTH9("75%"),

    TWELFTH10("83.333333%"),

    TWELFTH11("91.666667%"),

    FULL("100%"),

    SCREEN("100vh"),

    MIN("min-content"),

    MAX("max-content"),

    FIT("fit-content");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private Width(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { width: " + value + " }";
    }

  }

  /**
   * Utility classes for the {@code z-index} CSS property.
   */
  public enum ZIndex implements StyleClass {

    V0("0"),

    V10("10"),

    V20("20"),

    V30("30"),

    V40("40"),

    V50("50"),

    AUTO("auto");

    private final String className = ClassSelectorSeqId.next();

    private final String value;

    private ZIndex(String value) {
      this.value = value;
    }

    /**
     * Returns the CSS class name.
     *
     * @return the CSS class name
     */
    @Override
    public final String className() {
      return className;
    }

    /**
     * Returns the CSS style rule represented by this utility class.
     *
     * @return the CSS style rule
     */
    @Override
    public final String toString() {
      return "." + className + " { z-index: " + value + " }";
    }

  }

}
