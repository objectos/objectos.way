<mask-layer>:<mask-reference> || <position> [ / <bg-size> ]? || <repeat-style> || <geometry-box> || [ <geometry-box> | no-clip ] || <compositing-operator> || <masking-mode>
<mask-reference>:none | <image> | <mask-source>
<position>:[ [ left | center | right ] || [ top | center | bottom ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ]? | [ [ left | right ] <length-percentage> ] && [ [ top | bottom ] <length-percentage> ] ]
<bg-size>:[ <length-percentage> | auto ]{1,2} | cover | contain
<repeat-style>:repeat-x | repeat-y | [ repeat | space | round | no-repeat ]{1,2}
<geometry-box>:<shape-box> | fill-box | stroke-box | view-box
<compositing-operator>:add | subtract | intersect | exclude
<masking-mode>:alpha | luminance | match-source
<image>:<url> | <image()> | <image-set()> | <element()> | <paint()> | <cross-fade()> | <gradient>
<mask-source>:<url>
<length-percentage>:<length> | <percentage>
<shape-box>:<box> | margin-box
<image()>:image( <image-tags>? [ <image-src>? , <color>? ]! )
<image-set()>:image-set( <image-set-option># )
<element()>:element( <id-selector> )
<paint()>:paint( <ident>, <declaration-value>? )
<cross-fade()>:cross-fade( <cf-mixing-image> , <cf-final-image>? )
<gradient>:<linear-gradient()> | <repeating-linear-gradient()> | <radial-gradient()> | <repeating-radial-gradient()> | <conic-gradient()>
<box>:border-box | padding-box | content-box
<image-tags>:ltr | rtl
<image-src>:<url> | <string>
<color>:<rgb()> | <rgba()> | <hsl()> | <hsla()> | <hex-color> | <named-color> | currentcolor | <deprecated-system-color>
<image-set-option>:[ <image> | <string> ] <resolution>
<id-selector>:<hash-token>
<cf-mixing-image>:<percentage>? && <image>
<cf-final-image>:<image> | <color>
<linear-gradient()>:linear-gradient( [ <angle> | to <side-or-corner> ]? , <color-stop-list> )
<repeating-linear-gradient()>:repeating-linear-gradient( [ <angle> | to <side-or-corner> ]? , <color-stop-list> )
<radial-gradient()>:radial-gradient( [ <ending-shape> || <size> ]? [ at <position> ]? , <color-stop-list> )
<repeating-radial-gradient()>:repeating-radial-gradient( [ <ending-shape> || <size> ]? [ at <position> ]? , <color-stop-list> )
<conic-gradient()>:conic-gradient( [ from <angle> ]? [ at <position> ]?, <angular-color-stop-list> )
<rgb()>:rgb( <percentage>{3} [ / <alpha-value> ]? ) | rgb( <number>{3} [ / <alpha-value> ]? ) | rgb( <percentage>#{3} , <alpha-value>? ) | rgb( <number>#{3} , <alpha-value>? )
<rgba()>:rgba( <percentage>{3} [ / <alpha-value> ]? ) | rgba( <number>{3} [ / <alpha-value> ]? ) | rgba( <percentage>#{3} , <alpha-value>? ) | rgba( <number>#{3} , <alpha-value>? )
<hsl()>:hsl( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )
<hsla()>:hsla( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsla( <hue>, <percentage>, <percentage>, <alpha-value>? )
<side-or-corner>:[ left | right ] || [ top | bottom ]
<color-stop-list>:[ <linear-color-stop> [, <linear-color-hint>]? ]# , <linear-color-stop>
<ending-shape>:circle | ellipse
<size>:closest-side | farthest-side | closest-corner | farthest-corner | <length> | <length-percentage>{2}
<angular-color-stop-list>:[ <angular-color-stop> [, <angular-color-hint>]? ]# , <angular-color-stop>
<alpha-value>:<number> | <percentage>
<hue>:<number> | <angle>
<linear-color-stop>:<color> <color-stop-length>?
<linear-color-hint>:<length-percentage>
<angular-color-stop>:<color> && <color-stop-angle>?
<angular-color-hint>:<angle-percentage>
<color-stop-length>:<length-percentage>{1,2}
<color-stop-angle>:<angle-percentage>{1,2}
<angle-percentage>:<angle> | <percentage>
